{"map":"{\"version\":3,\"sources\":[\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/img/arrow.svg\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/img/leftarrow.svg\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/img/rightarrow.svg\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/ipware sync\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/variables.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/now.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/forecast.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/weatherrow.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/shittag.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/wtf.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/App.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/serviceWorker.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/geolocated.js\",\"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"webpackEmptyContext\",\"req\",\"e\",\"Error\",\"code\",\"keys\",\"resolve\",\"id\",\"cities\",\"title\",\"name\",\"Now\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"this\",\"props\",\"icon\",\"temperature\",\"description\",\"require\",\"style\",\"transform\",\"concat\",\"windDeg\",\"width\",\"windSpeed\",\"marginRight\",\"daylightLeft\",\"sunrise\",\"sunset\",\"message\",\"subMessage\",\"React\",\"Component\",\"Forecast\",\"humanReadable\",\"i\",\"_this\",\"currentForecast\",\"list\",\"map\",\"item\",\"secondsSinceEpoch\",\"dt\",\"date\",\"Date\",\"day\",\"getUTCDay\",\"utcHour\",\"getUTCHours\",\"hour\",\"sys\",\"pod\",\"humanTemp\",\"Math\",\"floor\",\"main\",\"temp\",\"imperialWind\",\"wind\",\"speed\",\"forceUpdate\",\"State\",\"0\",\"prevProps\",\"key\",\"dt_txt\",\"weather\",\"deg\",\"WeatherRow\",\"Fragment\",\"onClick\",\"handleLeftClick\",\"alt\",\"handleRightClick\",\"forecast\",\"ShitTag\",\"WTF\",\"context\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"handleClick\",\"bind\",\"assertThisInitialized\",\"setState\",\"prevState\",\"href\",\"city\",\"country\",\"Api_Key\",\"location\",\"getSuggestions\",\"value\",\"escapedValue\",\"trim\",\"replace\",\"regex\",\"RegExp\",\"section\",\"filter\",\"language\",\"test\",\"length\",\"getSuggestionValue\",\"suggestion\",\"renderSuggestion\",\"renderSectionTitle\",\"getSectionSuggestions\",\"ReactGA\",\"initialize\",\"pageview\",\"console\",\"log\",\"App\",\"humidity\",\"error\",\"suggestions\",\"onResponse\",\"sunriseSinceEpoch\",\"response\",\"sunriseHour\",\"sunriseMinute\",\"getUTCMinutes\",\"humanSunrise\",\"sunsetSinceEpoch\",\"sunsetHour\",\"sunsetMinute\",\"n\",\"humanSunset\",\"round\",\"getWeather\",\"_callee\",\"api_call\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"event\",\"category\",\"action\",\"latitude\",\"longitude\",\"fetch\",\"sent\",\"json\",\"getForecast\",\"stop\",\"_callee2\",\"_context2\",\"onChange\",\"_ref3\",\"newValue\",\"method\",\"prop\",\"some\",\"toLowerCase\",\"isCity\",\"result\",\"find\",\"getCountry\",\"onSuggestionsFetchRequested\",\"_ref4\",\"onSuggestionsClearRequested\",\"scrollDistance\",\"window\",\"outerWidth\",\"document\",\"getElementById\",\"scrollLeft\",\"_this$state\",\"inputProps\",\"placeholder\",\"shittag\",\"wtf\",\"dist_default\",\"multiSection\",\"now\",\"weatherrow\",\"Boolean\",\"hostname\",\"match\",\"get_ip\",\"undefined\",\"use\",\"res\",\"ip_info\",\"GeoTracking\",\"isGeolocationAvailable\",\"isGeolocationEnabled\",\"coords\",\"src_App\",\"class\",\"geolocated\",\"positionOptions\",\"enableHighAccuracy\",\"userDecisionTimeout\",\"ReactDOM\",\"render\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxC,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,MAAA,IACvCL,EAAAM,QAAAN,EACAJ,EAAAC,QAAAG,EACAA,EAAAO,GAAA,oKCNaC,EAAS,CACpB,CACEC,MAAO,KACPD,OAAQ,CACN,CACEE,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,SAER,CACEA,KAAM,UAER,CACEA,KAAM,0BAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,qBAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,wBAER,CACEA,KAAM,cAER,CACEA,KAAM,iBAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,OAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,QAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,gBAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,kBAER,CACEA,KAAM,UAER,CACEA,KAAM,gBAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,qBAER,CACEA,KAAM,SAER,CACEA,KAAM,sBAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,QAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,gBAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,sBAER,CACEA,KAAM,gBAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,kBAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,mBAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,sBAER,CACEA,KAAM,mBAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,UAER,CACEA,KAAM,gBAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,oBAER,CACEA,KAAM,WAER,CACEA,KAAM,iBAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,mBAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,QAER,CACEA,KAAM,sBAER,CACEA,KAAM,gBAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,gBAER,CACEA,KAAM,qBAER,CACEA,KAAM,kBAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,kBAER,CACEA,KAAM,QAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,iBAER,CACEA,KAAM,aAER,CACEA,KAAM,kBAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,gBAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,qBAER,CACEA,KAAM,gBAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,oBAER,CACEA,KAAM,mBAER,CACEA,KAAM,oBAER,CACEA,KAAM,WAER,CACEA,KAAM,gBAER,CACEA,KAAM,mBAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,kBAER,CACEA,KAAM,eAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,cAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,QAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,QAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,SAER,CACEA,KAAM,kBAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,kBAER,CACEA,KAAM,iBAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,kBAER,CACEA,KAAM,OAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,OAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,gBAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,gBAER,CACEA,KAAM,SAER,CACEA,KAAM,eAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,gBAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,qBAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,oBAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,kBAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,iBAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,kBAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,iBAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,mBAER,CACEA,KAAM,oBAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,gBAER,CACEA,KAAM,kBAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,sBAER,CACEA,KAAM,QAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,gBAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,SAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,gBAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,mBAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,iBAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,mBAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,iBAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,gBAER,CACEA,KAAM,kBAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,SAER,CACEA,KAAM,QAER,CACEA,KAAM,aAER,CACEA,KAAM,oBAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,qBAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,kBAER,CACEA,KAAM,mBAER,CACEA,KAAM,YAER,CACEA,KAAM,gBAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,QAER,CACEA,KAAM,eAER,CACEA,KAAM,eAER,CACEA,KAAM,gBAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,SAER,CACEA,KAAM,eAER,CACEA,KAAM,QAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,gBAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,kBAER,CACEA,KAAM,kBAER,CACEA,KAAM,qBAER,CACEA,KAAM,gBAER,CACEA,KAAM,mBAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,kBAER,CACEA,KAAM,kBAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,mBAER,CACEA,KAAM,iBAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,oBAER,CACEA,KAAM,oBAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,kBAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,mBAER,CACEA,KAAM,uBAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,mBAER,CACEA,KAAM,kBAER,CACEA,KAAM,WAER,CACEA,KAAM,SAER,CACEA,KAAM,gBAER,CACEA,KAAM,mBAER,CACEA,KAAM,kBAER,CACEA,KAAM,qBAER,CACEA,KAAM,WAER,CACEA,KAAM,gBAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,iBAER,CACEA,KAAM,iBAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,gBAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,oBAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,sBAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,QAER,CACEA,KAAM,YAER,CACEA,KAAM,iBAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,eAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,gBAER,CACEA,KAAM,WAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,OAER,CACEA,KAAM,kBAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,QAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,kBAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,kBAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,qBAER,CACEA,KAAM,mBAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,iBAER,CACEA,KAAM,YAER,CACEA,KAAM,gBAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,gBAER,CACEA,KAAM,iBAER,CACEA,KAAM,yBAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,gBAER,CACEA,KAAM,mBAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,oBAER,CACEA,KAAM,kBAER,CACEA,KAAM,SAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,uBAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,oBAER,CACEA,KAAM,sBAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,gBAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,YAER,CACEA,KAAM,SAER,CACEA,KAAM,SAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,mBAER,CACEA,KAAM,SAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,aAER,CACEA,KAAM,OAER,CACEA,KAAM,aAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,eAER,CACEA,KAAM,WAER,CACEA,KAAM,iBAER,CACEA,KAAM,iBAER,CACEA,KAAM,oBAER,CACEA,KAAM,sBAER,CACEA,KAAM,WAER,CACEA,KAAM,QAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,kBAER,CACEA,KAAM,cAER,CACEA,KAAM,SAER,CACEA,KAAM,sBAER,CACEA,KAAM,aAER,CACEA,KAAM,sBAER,CACEA,KAAM,OAER,CACEA,KAAM,YAER,CACEA,KAAM,iBAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,gBAER,CACEA,KAAM,qBAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,eAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,QAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,cAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,aAER,CACEA,KAAM,mBAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,qBAER,CACEA,KAAM,WAER,CACEA,KAAM,aAER,CACEA,KAAM,QAER,CACEA,KAAM,YAER,CACEA,KAAM,QAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,QAGR,CACEA,KAAM,UAER,CACEA,KAAM,8BAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,aAER,CACEA,KAAM,iBAER,CACEA,KAAM,cAER,CACEA,KAAM,uBAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,UAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,UAER,CACEA,KAAM,WAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,YAER,CACEA,KAAM,cAER,CACEA,KAAM,YAER,CACEA,KA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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/arrow.7fc7e388.svg\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/leftarrow.e8d634ba.svg\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/rightarrow.c4fef3e8.svg\\\";\",\"function webpackEmptyContext(req) {\\n\\tvar e = new Error(\\\"Cannot find module '\\\" + req + \\\"'\\\");\\n\\te.code = 'MODULE_NOT_FOUND';\\n\\tthrow e;\\n}\\nwebpackEmptyContext.keys = function() { return []; };\\nwebpackEmptyContext.resolve = webpackEmptyContext;\\nmodule.exports = webpackEmptyContext;\\nwebpackEmptyContext.id = 43;\",\"\\n\\nexport const cities = [\\n  {\\n    title: 'GB',\\n    cities: [\\n      {\\n        name: 'Aberaeron',\\n      },\\n      {\\n        name: 'Henfield',\\n      },\\n      {\\n        name: 'Aberdare',\\n      },\\n      {\\n        name: 'Aberdeen',\\n      },\\n      {\\n        name: 'Aberfeldy',\\n      },\\n      {\\n        name: 'Abergavenny',\\n      },\\n      {\\n        name: 'Abergele',\\n      },\\n      {\\n        name: 'Abertillery',\\n      },\\n      {\\n        name: 'Aberystwyth',\\n      },\\n      {\\n        name: 'Abingdon',\\n      },\\n      {\\n        name: 'Accrington',\\n      },\\n      {\\n        name: 'Adlington',\\n      },\\n      {\\n        name: 'Airdrie',\\n      },\\n      {\\n        name: 'Alcester',\\n      },\\n      {\\n        name: 'Aldeburgh',\\n      },\\n      {\\n        name: 'Aldershot',\\n      },\\n      {\\n        name: 'Aldridge',\\n      },\\n      {\\n        name: 'Alford',\\n      },\\n      {\\n        name: 'Alfreton',\\n      },\\n      {\\n        name: 'Alloa',\\n      },\\n      {\\n        name: 'Alnwick',\\n      },\\n      {\\n        name: 'Alsager',\\n      },\\n      {\\n        name: 'Alston',\\n      },\\n      {\\n        name: 'Amesbury',\\n      },\\n      {\\n        name: 'Amlwch',\\n      },\\n      {\\n        name: 'Ammanford',\\n      },\\n      {\\n        name: 'Ampthill',\\n      },\\n      {\\n        name: 'Andover',\\n      },\\n      {\\n        name: 'Annan',\\n      },\\n      {\\n        name: 'Antrim',\\n      },\\n      {\\n        name: 'Appleby in Westmorland',\\n      },\\n      {\\n        name: 'Arbroath',\\n      },\\n      {\\n        name: 'Armagh',\\n      },\\n      {\\n        name: 'Arundel',\\n      },\\n      {\\n        name: 'Ashbourne',\\n      },\\n      {\\n        name: 'Ashburton',\\n      },\\n      {\\n        name: 'Ashby de la Zouch',\\n      },\\n      {\\n        name: 'Ashford',\\n      },\\n      {\\n        name: 'Ashington',\\n      },\\n      {\\n        name: 'Ashton in Makerfield',\\n      },\\n      {\\n        name: 'Atherstone',\\n      },\\n      {\\n        name: 'Auchtermuchty',\\n      },\\n      {\\n        name: 'Axminster',\\n      },\\n      {\\n        name: 'Aylesbury',\\n      },\\n      {\\n        name: 'Aylsham',\\n      },\\n      {\\n        name: 'Ayr',\\n      },\\n      {\\n        name: 'Bacup',\\n      },\\n      {\\n        name: 'Bakewell',\\n      },\\n      {\\n        name: 'Bala',\\n      },\\n      {\\n        name: 'Ballater',\\n      },\\n      {\\n        name: 'Ballycastle',\\n      },\\n      {\\n        name: 'Ballyclare',\\n      },\\n      {\\n        name: 'Ballymena',\\n      },\\n      {\\n        name: 'Ballymoney',\\n      },\\n      {\\n        name: 'Ballynahinch',\\n      },\\n      {\\n        name: 'Banbridge',\\n      },\\n      {\\n        name: 'Banbury',\\n      },\\n      {\\n        name: 'Banchory',\\n      },\\n      {\\n        name: 'Banff',\\n      },\\n      {\\n        name: 'Bangor',\\n      },\\n      {\\n        name: 'Barmouth',\\n      },\\n      {\\n        name: 'Barnard Castle',\\n      },\\n      {\\n        name: 'Barnet',\\n      },\\n      {\\n        name: 'Barnoldswick',\\n      },\\n      {\\n        name: 'Barnsley',\\n      },\\n      {\\n        name: 'Barnstaple',\\n      },\\n      {\\n        name: 'Barrhead',\\n      },\\n      {\\n        name: 'Barrow in Furness',\\n      },\\n      {\\n        name: 'Barry',\\n      },\\n      {\\n        name: 'Barton upon Humber',\\n      },\\n      {\\n        name: 'Basildon',\\n      },\\n      {\\n        name: 'Basingstoke',\\n      },\\n      {\\n        name: 'Bath',\\n      },\\n      {\\n        name: 'Bathgate',\\n      },\\n      {\\n        name: 'Batley',\\n      },\\n      {\\n        name: 'Battle',\\n      },\\n      {\\n        name: 'Bawtry',\\n      },\\n      {\\n        name: 'Beaconsfield',\\n      },\\n      {\\n        name: 'Bearsden',\\n      },\\n      {\\n        name: 'Beaumaris',\\n      },\\n      {\\n        name: 'Bebington',\\n      },\\n      {\\n        name: 'Beccles',\\n      },\\n      {\\n        name: 'Bedale',\\n      },\\n      {\\n        name: 'Bedford',\\n      },\\n      {\\n        name: 'Bedlington',\\n      },\\n      {\\n        name: 'Bedworth',\\n      },\\n      {\\n        name: 'Beeston',\\n      },\\n      {\\n        name: 'Bellshill',\\n      },\\n      {\\n        name: 'Belper',\\n      },\\n      {\\n        name: 'Berkhamsted',\\n      },\\n      {\\n        name: 'Berwick upon Tweed',\\n      },\\n      {\\n        name: 'Betws y Coed',\\n      },\\n      {\\n        name: 'Beverley',\\n      },\\n      {\\n        name: 'Bewdley',\\n      },\\n      {\\n        name: 'Bexhill on Sea',\\n      },\\n      {\\n        name: 'Bicester',\\n      },\\n      {\\n        name: 'Biddulph',\\n      },\\n      {\\n        name: 'Bideford',\\n      },\\n      {\\n        name: 'Biggar',\\n      },\\n      {\\n        name: 'Biggleswade',\\n      },\\n      {\\n        name: 'Billericay',\\n      },\\n      {\\n        name: 'Bilston',\\n      },\\n      {\\n        name: 'Bingham',\\n      },\\n      {\\n        name: 'Birkenhead',\\n      },\\n      {\\n        name: 'Birmingham',\\n      },\\n      {\\n        name: 'Bishop Auckland',\\n      },\\n      {\\n        name: 'Blackburn',\\n      },\\n      {\\n        name: 'Blackheath',\\n      },\\n      {\\n        name: 'Blackpool',\\n      },\\n      {\\n        name: 'Blaenau Ffestiniog',\\n      },\\n      {\\n        name: 'Blandford Forum',\\n      },\\n      {\\n        name: 'Bletchley',\\n      },\\n      {\\n        name: 'Bloxwich',\\n      },\\n      {\\n        name: 'Blyth',\\n      },\\n      {\\n        name: 'Bodmin',\\n      },\\n      {\\n        name: 'Bognor Regis',\\n      },\\n      {\\n        name: 'Bollington',\\n      },\\n      {\\n        name: 'Bolsover',\\n      },\\n      {\\n        name: 'Bolton',\\n      },\\n      {\\n        name: 'Bootle',\\n      },\\n      {\\n        name: 'Borehamwood',\\n      },\\n      {\\n        name: 'Boston',\\n      },\\n      {\\n        name: 'Bourne',\\n      },\\n      {\\n        name: 'Bournemouth',\\n      },\\n      {\\n        name: 'Brackley',\\n      },\\n      {\\n        name: 'Bracknell',\\n      },\\n      {\\n        name: 'Bradford',\\n      },\\n      {\\n        name: 'Bradford on Avon',\\n      },\\n      {\\n        name: 'Brading',\\n      },\\n      {\\n        name: 'Bradley Stoke',\\n      },\\n      {\\n        name: 'Bradninch',\\n      },\\n      {\\n        name: 'Braintree',\\n      },\\n      {\\n        name: 'Brechin',\\n      },\\n      {\\n        name: 'Brecon',\\n      },\\n      {\\n        name: 'Brentwood',\\n      },\\n      {\\n        name: 'Bridge of Allan',\\n      },\\n      {\\n        name: 'Bridgend',\\n      },\\n      {\\n        name: 'Bridgnorth',\\n      },\\n      {\\n        name: 'Bridgwater',\\n      },\\n      {\\n        name: 'Bridlington',\\n      },\\n      {\\n        name: 'Bridport',\\n      },\\n      {\\n        name: 'Brigg',\\n      },\\n      {\\n        name: 'Brighouse',\\n      },\\n      {\\n        name: 'Brightlingsea',\\n      },\\n      {\\n        name: 'Brighton',\\n      },\\n      {\\n        name: 'Bristol',\\n      },\\n      {\\n        name: 'Brixham',\\n      },\\n      {\\n        name: 'Broadstairs',\\n      },\\n      {\\n        name: 'Bromsgrove',\\n      },\\n      {\\n        name: 'Bromyard',\\n      },\\n      {\\n        name: 'Brynmawr',\\n      },\\n      {\\n        name: 'Buckfastleigh',\\n      },\\n      {\\n        name: 'Buckie',\\n      },\\n      {\\n        name: 'Buckingham',\\n      },\\n      {\\n        name: 'Buckley',\\n      },\\n      {\\n        name: 'Bude',\\n      },\\n      {\\n        name: 'Budleigh Salterton',\\n      },\\n      {\\n        name: 'Builth Wells',\\n      },\\n      {\\n        name: 'Bungay',\\n      },\\n      {\\n        name: 'Buntingford',\\n      },\\n      {\\n        name: 'Burford',\\n      },\\n      {\\n        name: 'Burgess Hill',\\n      },\\n      {\\n        name: 'Burnham on Crouch',\\n      },\\n      {\\n        name: 'Burnham on Sea',\\n      },\\n      {\\n        name: 'Burnley',\\n      },\\n      {\\n        name: 'Burntisland',\\n      },\\n      {\\n        name: 'Burntwood',\\n      },\\n      {\\n        name: 'Burry Port',\\n      },\\n      {\\n        name: 'Burton Latimer',\\n      },\\n      {\\n        name: 'Bury',\\n      },\\n      {\\n        name: 'Bushmills',\\n      },\\n      {\\n        name: 'Buxton',\\n      },\\n      {\\n        name: 'Caernarfon',\\n      },\\n      {\\n        name: 'Caerphilly',\\n      },\\n      {\\n        name: 'Caistor',\\n      },\\n      {\\n        name: 'Caldicot',\\n      },\\n      {\\n        name: 'Callander',\\n      },\\n      {\\n        name: 'Calne',\\n      },\\n      {\\n        name: 'Camberley',\\n      },\\n      {\\n        name: 'Camborne',\\n      },\\n      {\\n        name: 'Cambridge',\\n      },\\n      {\\n        name: 'Camelford',\\n      },\\n      {\\n        name: 'Campbeltown',\\n      },\\n      {\\n        name: 'Cannock',\\n      },\\n      {\\n        name: 'Canterbury',\\n      },\\n      {\\n        name: 'Cardiff',\\n      },\\n      {\\n        name: 'Cardigan',\\n      },\\n      {\\n        name: 'Carlisle',\\n      },\\n      {\\n        name: 'Carluke',\\n      },\\n      {\\n        name: 'Carmarthen',\\n      },\\n      {\\n        name: 'Carnforth',\\n      },\\n      {\\n        name: 'Carnoustie',\\n      },\\n      {\\n        name: 'Carrickfergus',\\n      },\\n      {\\n        name: 'Carterton',\\n      },\\n      {\\n        name: 'Castle Douglas',\\n      },\\n      {\\n        name: 'Castlederg',\\n      },\\n      {\\n        name: 'Castleford',\\n      },\\n      {\\n        name: 'Castlewellan',\\n      },\\n      {\\n        name: 'Chard',\\n      },\\n      {\\n        name: 'Charlbury',\\n      },\\n      {\\n        name: 'Chatham',\\n      },\\n      {\\n        name: 'Chatteris',\\n      },\\n      {\\n        name: 'Chelmsford',\\n      },\\n      {\\n        name: 'Cheltenham',\\n      },\\n      {\\n        name: 'Chepstow',\\n      },\\n      {\\n        name: 'Chesham',\\n      },\\n      {\\n        name: 'Cheshunt',\\n      },\\n      {\\n        name: 'Chester',\\n      },\\n      {\\n        name: 'Chester le Street',\\n      },\\n      {\\n        name: 'Chesterfield',\\n      },\\n      {\\n        name: 'Chichester',\\n      },\\n      {\\n        name: 'Chippenham',\\n      },\\n      {\\n        name: 'Chipping Campden',\\n      },\\n      {\\n        name: 'Chipping Norton',\\n      },\\n      {\\n        name: 'Chipping Sodbury',\\n      },\\n      {\\n        name: 'Chorley',\\n      },\\n      {\\n        name: 'Christchurch',\\n      },\\n      {\\n        name: 'Church Stretton',\\n      },\\n      {\\n        name: 'Cinderford',\\n      },\\n      {\\n        name: 'Cirencester',\\n      },\\n      {\\n        name: 'Clacton on Sea',\\n      },\\n      {\\n        name: 'Cleckheaton',\\n      },\\n      {\\n        name: 'Cleethorpes',\\n      },\\n      {\\n        name: 'Clevedon',\\n      },\\n      {\\n        name: 'Clitheroe',\\n      },\\n      {\\n        name: 'Clogher',\\n      },\\n      {\\n        name: 'Clydebank',\\n      },\\n      {\\n        name: 'Coalisland',\\n      },\\n      {\\n        name: 'Coalville',\\n      },\\n      {\\n        name: 'Coatbridge',\\n      },\\n      {\\n        name: 'Cockermouth',\\n      },\\n      {\\n        name: 'Coggeshall',\\n      },\\n      {\\n        name: 'Colchester',\\n      },\\n      {\\n        name: 'Coldstream',\\n      },\\n      {\\n        name: 'Coleraine',\\n      },\\n      {\\n        name: 'Coleshill',\\n      },\\n      {\\n        name: 'Colne',\\n      },\\n      {\\n        name: 'Colwyn Bay',\\n      },\\n      {\\n        name: 'Comber',\\n      },\\n      {\\n        name: 'Congleton',\\n      },\\n      {\\n        name: 'Conwy',\\n      },\\n      {\\n        name: 'Cookstown',\\n      },\\n      {\\n        name: 'Corbridge',\\n      },\\n      {\\n        name: 'Corby',\\n      },\\n      {\\n        name: 'Coventry',\\n      },\\n      {\\n        name: 'Cowbridge',\\n      },\\n      {\\n        name: 'Cowdenbeath',\\n      },\\n      {\\n        name: 'Cowes',\\n      },\\n      {\\n        name: 'Craigavon',\\n      },\\n      {\\n        name: 'Cramlington',\\n      },\\n      {\\n        name: 'Crawley',\\n      },\\n      {\\n        name: 'Crayford',\\n      },\\n      {\\n        name: 'Crediton',\\n      },\\n      {\\n        name: 'Crewe',\\n      },\\n      {\\n        name: 'Crewkerne',\\n      },\\n      {\\n        name: 'Criccieth',\\n      },\\n      {\\n        name: 'Crickhowell',\\n      },\\n      {\\n        name: 'Crieff',\\n      },\\n      {\\n        name: 'Cromarty',\\n      },\\n      {\\n        name: 'Cromer',\\n      },\\n      {\\n        name: 'Crowborough',\\n      },\\n      {\\n        name: 'Crowthorne',\\n      },\\n      {\\n        name: 'Crumlin',\\n      },\\n      {\\n        name: 'Cuckfield',\\n      },\\n      {\\n        name: 'Cullen',\\n      },\\n      {\\n        name: 'Cullompton',\\n      },\\n      {\\n        name: 'Cumbernauld',\\n      },\\n      {\\n        name: 'Cupar',\\n      },\\n      {\\n        name: 'Cwmbran',\\n      },\\n      {\\n        name: 'Dalbeattie',\\n      },\\n      {\\n        name: 'Dalkeith',\\n      },\\n      {\\n        name: 'Darlington',\\n      },\\n      {\\n        name: 'Dartford',\\n      },\\n      {\\n        name: 'Dartmouth',\\n      },\\n      {\\n        name: 'Darwen',\\n      },\\n      {\\n        name: 'Daventry',\\n      },\\n      {\\n        name: 'Dawlish',\\n      },\\n      {\\n        name: 'Deal',\\n      },\\n      {\\n        name: 'Denbigh',\\n      },\\n      {\\n        name: 'Denton',\\n      },\\n      {\\n        name: 'Derby',\\n      },\\n      {\\n        name: 'Dereham',\\n      },\\n      {\\n        name: 'Devizes',\\n      },\\n      {\\n        name: 'Dewsbury',\\n      },\\n      {\\n        name: 'Didcot',\\n      },\\n      {\\n        name: 'Dingwall',\\n      },\\n      {\\n        name: 'Dinnington',\\n      },\\n      {\\n        name: 'Diss',\\n      },\\n      {\\n        name: 'Dolgellau',\\n      },\\n      {\\n        name: 'Donaghadee',\\n      },\\n      {\\n        name: 'Doncaster',\\n      },\\n      {\\n        name: 'Dorchester',\\n      },\\n      {\\n        name: 'Dorking',\\n      },\\n      {\\n        name: 'Dornoch',\\n      },\\n      {\\n        name: 'Dover',\\n      },\\n      {\\n        name: 'Downham Market',\\n      },\\n      {\\n        name: 'Downpatrick',\\n      },\\n      {\\n        name: 'Driffield',\\n      },\\n      {\\n        name: 'Dronfield',\\n      },\\n      {\\n        name: 'Droylsden',\\n      },\\n      {\\n        name: 'Dudley',\\n      },\\n      {\\n        name: 'Dufftown',\\n      },\\n      {\\n        name: 'Dukinfield',\\n      },\\n      {\\n        name: 'Dumbarton',\\n      },\\n      {\\n        name: 'Dumfries',\\n      },\\n      {\\n        name: 'Dunbar',\\n      },\\n      {\\n        name: 'Dunblane',\\n      },\\n      {\\n        name: 'Dundee',\\n      },\\n      {\\n        name: 'Dunfermline',\\n      },\\n      {\\n        name: 'Dungannon',\\n      },\\n      {\\n        name: 'Dunoon',\\n      },\\n      {\\n        name: 'Duns',\\n      },\\n      {\\n        name: 'Dunstable',\\n      },\\n      {\\n        name: 'Durham',\\n      },\\n      {\\n        name: 'Dursley',\\n      },\\n      {\\n        name: 'Easingwold',\\n      },\\n      {\\n        name: 'East Grinstead',\\n      },\\n      {\\n        name: 'East Kilbride',\\n      },\\n      {\\n        name: 'Eastbourne',\\n      },\\n      {\\n        name: 'Eastleigh',\\n      },\\n      {\\n        name: 'Eastwood',\\n      },\\n      {\\n        name: 'Ebbw Vale',\\n      },\\n      {\\n        name: 'Edenbridge',\\n      },\\n      {\\n        name: 'Edinburgh',\\n      },\\n      {\\n        name: 'Egham',\\n      },\\n      {\\n        name: 'Elgin',\\n      },\\n      {\\n        name: 'Ellesmere',\\n      },\\n      {\\n        name: 'Ellesmere Port',\\n      },\\n      {\\n        name: 'Ely',\\n      },\\n      {\\n        name: 'Enniskillen',\\n      },\\n      {\\n        name: 'Epping',\\n      },\\n      {\\n        name: 'Epsom',\\n      },\\n      {\\n        name: 'Erith',\\n      },\\n      {\\n        name: 'Esher',\\n      },\\n      {\\n        name: 'Evesham',\\n      },\\n      {\\n        name: 'Exeter',\\n      },\\n      {\\n        name: 'Exmouth',\\n      },\\n      {\\n        name: 'Eye',\\n      },\\n      {\\n        name: 'Eyemouth',\\n      },\\n      {\\n        name: 'Failsworth',\\n      },\\n      {\\n        name: 'Fairford',\\n      },\\n      {\\n        name: 'Fakenham',\\n      },\\n      {\\n        name: 'Falkirk',\\n      },\\n      {\\n        name: 'Falkland',\\n      },\\n      {\\n        name: 'Falmouth',\\n      },\\n      {\\n        name: 'Fareham',\\n      },\\n      {\\n        name: 'Faringdon',\\n      },\\n      {\\n        name: 'Farnborough',\\n      },\\n      {\\n        name: 'Farnham',\\n      },\\n      {\\n        name: 'Farnworth',\\n      },\\n      {\\n        name: 'Faversham',\\n      },\\n      {\\n        name: 'Felixstowe',\\n      },\\n      {\\n        name: 'Ferndown',\\n      },\\n      {\\n        name: 'Filey',\\n      },\\n      {\\n        name: 'Fintona',\\n      },\\n      {\\n        name: 'Fishguard',\\n      },\\n      {\\n        name: 'Fivemiletown',\\n      },\\n      {\\n        name: 'Fleet',\\n      },\\n      {\\n        name: 'Fleetwood',\\n      },\\n      {\\n        name: 'Flint',\\n      },\\n      {\\n        name: 'Flitwick',\\n      },\\n      {\\n        name: 'Folkestone',\\n      },\\n      {\\n        name: 'Fordingbridge',\\n      },\\n      {\\n        name: 'Forfar',\\n      },\\n      {\\n        name: 'Forres',\\n      },\\n      {\\n        name: 'Fort William',\\n      },\\n      {\\n        name: 'Fowey',\\n      },\\n      {\\n        name: 'Framlingham',\\n      },\\n      {\\n        name: 'Fraserburgh',\\n      },\\n      {\\n        name: 'Frodsham',\\n      },\\n      {\\n        name: 'Frome',\\n      },\\n      {\\n        name: 'Gainsborough',\\n      },\\n      {\\n        name: 'Galashiels',\\n      },\\n      {\\n        name: 'Gateshead',\\n      },\\n      {\\n        name: 'Gillingham',\\n      },\\n      {\\n        name: 'Glasgow',\\n      },\\n      {\\n        name: 'Glastonbury',\\n      },\\n      {\\n        name: 'Glossop',\\n      },\\n      {\\n        name: 'Gloucester',\\n      },\\n      {\\n        name: 'Godalming',\\n      },\\n      {\\n        name: 'Godmanchester',\\n      },\\n      {\\n        name: 'Goole',\\n      },\\n      {\\n        name: 'Gorseinon',\\n      },\\n      {\\n        name: 'Gosport',\\n      },\\n      {\\n        name: 'Gourock',\\n      },\\n      {\\n        name: 'Grange over Sands',\\n      },\\n      {\\n        name: 'Grangemouth',\\n      },\\n      {\\n        name: 'Grantham',\\n      },\\n      {\\n        name: 'Grantown on Spey',\\n      },\\n      {\\n        name: 'Gravesend',\\n      },\\n      {\\n        name: 'Grays',\\n      },\\n      {\\n        name: 'Great Yarmouth',\\n      },\\n      {\\n        name: 'Greenock',\\n      },\\n      {\\n        name: 'Grimsby',\\n      },\\n      {\\n        name: 'Guildford',\\n      },\\n      {\\n        name: 'Haddington',\\n      },\\n      {\\n        name: 'Hadleigh',\\n      },\\n      {\\n        name: 'Hailsham',\\n      },\\n      {\\n        name: 'Halesowen',\\n      },\\n      {\\n        name: 'Halesworth',\\n      },\\n      {\\n        name: 'Halifax',\\n      },\\n      {\\n        name: 'Halstead',\\n      },\\n      {\\n        name: 'Haltwhistle',\\n      },\\n      {\\n        name: 'Hamilton',\\n      },\\n      {\\n        name: 'Harlow',\\n      },\\n      {\\n        name: 'Harpenden',\\n      },\\n      {\\n        name: 'Harrogate',\\n      },\\n      {\\n        name: 'Hartlepool',\\n      },\\n      {\\n        name: 'Harwich',\\n      },\\n      {\\n        name: 'Haslemere',\\n      },\\n      {\\n        name: 'Hastings',\\n      },\\n      {\\n        name: 'Hatfield',\\n      },\\n      {\\n        name: 'Havant',\\n      },\\n      {\\n        name: 'Haverfordwest',\\n      },\\n      {\\n        name: 'Haverhill',\\n      },\\n      {\\n        name: 'Hawarden',\\n      },\\n      {\\n        name: 'Hawick',\\n      },\\n      {\\n        name: 'Hay on Wye',\\n      },\\n      {\\n        name: 'Hayle',\\n      },\\n      {\\n        name: 'Haywards Heath',\\n      },\\n      {\\n        name: 'Heanor',\\n      },\\n      {\\n        name: 'Heathfield',\\n      },\\n      {\\n        name: 'Hebden Bridge',\\n      },\\n      {\\n        name: 'Helensburgh',\\n      },\\n      {\\n        name: 'Helston',\\n      },\\n      {\\n        name: 'Hemel Hempstead',\\n      },\\n      {\\n        name: 'Henley on Thames',\\n      },\\n      {\\n        name: 'Hereford',\\n      },\\n      {\\n        name: 'Herne Bay',\\n      },\\n      {\\n        name: 'Hertford',\\n      },\\n      {\\n        name: 'Hessle',\\n      },\\n      {\\n        name: 'Heswall',\\n      },\\n      {\\n        name: 'Hexham',\\n      },\\n      {\\n        name: 'High Wycombe',\\n      },\\n      {\\n        name: 'Higham Ferrers',\\n      },\\n      {\\n        name: 'Highworth',\\n      },\\n      {\\n        name: 'Hinckley',\\n      },\\n      {\\n        name: 'Hitchin',\\n      },\\n      {\\n        name: 'Hoddesdon',\\n      },\\n      {\\n        name: 'Holmfirth',\\n      },\\n      {\\n        name: 'Holsworthy',\\n      },\\n      {\\n        name: 'Holyhead',\\n      },\\n      {\\n        name: 'Holywell',\\n      },\\n      {\\n        name: 'Honiton',\\n      },\\n      {\\n        name: 'Horley',\\n      },\\n      {\\n        name: 'Horncastle',\\n      },\\n      {\\n        name: 'Hornsea',\\n      },\\n      {\\n        name: 'Horsham',\\n      },\\n      {\\n        name: 'Horwich',\\n      },\\n      {\\n        name: 'Houghton le Spring',\\n      },\\n      {\\n        name: 'Hove',\\n      },\\n      {\\n        name: 'Howden',\\n      },\\n      {\\n        name: 'Hoylake',\\n      },\\n      {\\n        name: 'Hucknall',\\n      },\\n      {\\n        name: 'Huddersfield',\\n      },\\n      {\\n        name: 'Hungerford',\\n      },\\n      {\\n        name: 'Hunstanton',\\n      },\\n      {\\n        name: 'Huntingdon',\\n      },\\n      {\\n        name: 'Huntly',\\n      },\\n      {\\n        name: 'Hyde',\\n      },\\n      {\\n        name: 'Hythe',\\n      },\\n      {\\n        name: 'Ilford',\\n      },\\n      {\\n        name: 'Ilfracombe',\\n      },\\n      {\\n        name: 'Ilkeston',\\n      },\\n      {\\n        name: 'Ilkley',\\n      },\\n      {\\n        name: 'Ilminster',\\n      },\\n      {\\n        name: 'Innerleithen',\\n      },\\n      {\\n        name: 'Inveraray',\\n      },\\n      {\\n        name: 'Inverkeithing',\\n      },\\n      {\\n        name: 'Inverness',\\n      },\\n      {\\n        name: 'Inverurie',\\n      },\\n      {\\n        name: 'Ipswich',\\n      },\\n      {\\n        name: 'Irthlingborough',\\n      },\\n      {\\n        name: 'Irvine',\\n      },\\n      {\\n        name: 'Ivybridge',\\n      },\\n      {\\n        name: 'Jarrow',\\n      },\\n      {\\n        name: 'Jedburgh',\\n      },\\n      {\\n        name: 'Johnstone',\\n      },\\n      {\\n        name: 'Keighley',\\n      },\\n      {\\n        name: 'Keith',\\n      },\\n      {\\n        name: 'Kelso',\\n      },\\n      {\\n        name: 'Kempston',\\n      },\\n      {\\n        name: 'Kendal',\\n      },\\n      {\\n        name: 'Kenilworth',\\n      },\\n      {\\n        name: 'Kesgrave',\\n      },\\n      {\\n        name: 'Keswick',\\n      },\\n      {\\n        name: 'Kettering',\\n      },\\n      {\\n        name: 'Keynsham',\\n      },\\n      {\\n        name: 'Kidderminster',\\n      },\\n      {\\n        name: 'Kilbarchan',\\n      },\\n      {\\n        name: 'Kilkeel',\\n      },\\n      {\\n        name: 'Killyleagh',\\n      },\\n      {\\n        name: 'Kilmarnock',\\n      },\\n      {\\n        name: 'Kilwinning',\\n      },\\n      {\\n        name: 'Kinghorn',\\n      },\\n      {\\n        name: 'Kingsbridge',\\n      },\\n      {\\n        name: 'Kington',\\n      },\\n      {\\n        name: 'Kingussie',\\n      },\\n      {\\n        name: 'Kinross',\\n      },\\n      {\\n        name: 'Kintore',\\n      },\\n      {\\n        name: 'Kirkby',\\n      },\\n      {\\n        name: 'Kirkby Lonsdale',\\n      },\\n      {\\n        name: 'Kirkcaldy',\\n      },\\n      {\\n        name: 'Kirkcudbright',\\n      },\\n      {\\n        name: 'Kirkham',\\n      },\\n      {\\n        name: 'Kirkwall',\\n      },\\n      {\\n        name: 'Kirriemuir',\\n      },\\n      {\\n        name: 'Knaresborough',\\n      },\\n      {\\n        name: 'Knighton',\\n      },\\n      {\\n        name: 'Knutsford',\\n      },\\n      {\\n        name: 'Ladybank',\\n      },\\n      {\\n        name: 'Lampeter',\\n      },\\n      {\\n        name: 'Lanark',\\n      },\\n      {\\n        name: 'Lancaster',\\n      },\\n      {\\n        name: 'Langholm',\\n      },\\n      {\\n        name: 'Largs',\\n      },\\n      {\\n        name: 'Larne',\\n      },\\n      {\\n        name: 'Laugharne',\\n      },\\n      {\\n        name: 'Launceston',\\n      },\\n      {\\n        name: 'Laurencekirk',\\n      },\\n      {\\n        name: 'Leamington Spa',\\n      },\\n      {\\n        name: 'Leatherhead',\\n      },\\n      {\\n        name: 'Ledbury',\\n      },\\n      {\\n        name: 'Leeds',\\n      },\\n      {\\n        name: 'Leek',\\n      },\\n      {\\n        name: 'Leicester',\\n      },\\n      {\\n        name: 'Leighton Buzzard',\\n      },\\n      {\\n        name: 'Leiston',\\n      },\\n      {\\n        name: 'Leominster',\\n      },\\n      {\\n        name: 'Lerwick',\\n      },\\n      {\\n        name: 'Letchworth',\\n      },\\n      {\\n        name: 'Leven',\\n      },\\n      {\\n        name: 'Lewes',\\n      },\\n      {\\n        name: 'Leyland',\\n      },\\n      {\\n        name: 'Lichfield',\\n      },\\n      {\\n        name: 'Limavady',\\n      },\\n      {\\n        name: 'Lincoln',\\n      },\\n      {\\n        name: 'Linlithgow',\\n      },\\n      {\\n        name: 'Lisburn',\\n      },\\n      {\\n        name: 'Liskeard',\\n      },\\n      {\\n        name: 'Lisnaskea',\\n      },\\n      {\\n        name: 'Littlehampton',\\n      },\\n      {\\n        name: 'Liverpool',\\n      },\\n      {\\n        name: 'Llandeilo',\\n      },\\n      {\\n        name: 'Llandovery',\\n      },\\n      {\\n        name: 'Llandrindod Wells',\\n      },\\n      {\\n        name: 'Llandudno',\\n      },\\n      {\\n        name: 'Llanelli',\\n      },\\n      {\\n        name: 'Llanfyllin',\\n      },\\n      {\\n        name: 'Llangollen',\\n      },\\n      {\\n        name: 'Llanidloes',\\n      },\\n      {\\n        name: 'Llanrwst',\\n      },\\n      {\\n        name: 'Llantrisant',\\n      },\\n      {\\n        name: 'Llantwit Major',\\n      },\\n      {\\n        name: 'Llanwrtyd Wells',\\n      },\\n      {\\n        name: 'Loanhead',\\n      },\\n      {\\n        name: 'Lochgilphead',\\n      },\\n      {\\n        name: 'Lockerbie',\\n      },\\n      {\\n        name: 'London',\\n      },\\n      {\\n        name: 'Long Eaton',\\n      },\\n      {\\n        name: 'Longridge',\\n      },\\n      {\\n        name: 'Looe',\\n      },\\n      {\\n        name: 'Lossiemouth',\\n      },\\n      {\\n        name: 'Lostwithiel',\\n      },\\n      {\\n        name: 'Loughborough',\\n      },\\n      {\\n        name: 'Loughton',\\n      },\\n      {\\n        name: 'Louth',\\n      },\\n      {\\n        name: 'Lowestoft',\\n      },\\n      {\\n        name: 'Ludlow',\\n      },\\n      {\\n        name: 'Lurgan',\\n      },\\n      {\\n        name: 'Luton',\\n      },\\n      {\\n        name: 'Lutterworth',\\n      },\\n      {\\n        name: 'Lydd',\\n      },\\n      {\\n        name: 'Lydney',\\n      },\\n      {\\n        name: 'Lyme Regis',\\n      },\\n      {\\n        name: 'Lymington',\\n      },\\n      {\\n        name: 'Lynton',\\n      },\\n      {\\n        name: 'Mablethorpe',\\n      },\\n      {\\n        name: 'Macclesfield',\\n      },\\n      {\\n        name: 'Machynlleth',\\n      },\\n      {\\n        name: 'Maesteg',\\n      },\\n      {\\n        name: 'Magherafelt',\\n      },\\n      {\\n        name: 'Maidenhead',\\n      },\\n      {\\n        name: 'Maidstone',\\n      },\\n      {\\n        name: 'Maldon',\\n      },\\n      {\\n        name: 'Malmesbury',\\n      },\\n      {\\n        name: 'Malton',\\n      },\\n      {\\n        name: 'Malvern',\\n      },\\n      {\\n        name: 'Manchester',\\n      },\\n      {\\n        name: 'Manningtree',\\n      },\\n      {\\n        name: 'Mansfield',\\n      },\\n      {\\n        name: 'March',\\n      },\\n      {\\n        name: 'Margate',\\n      },\\n      {\\n        name: 'Market Deeping',\\n      },\\n      {\\n        name: 'Market Drayton',\\n      },\\n      {\\n        name: 'Market Harborough',\\n      },\\n      {\\n        name: 'Market Rasen',\\n      },\\n      {\\n        name: 'Market Weighton',\\n      },\\n      {\\n        name: 'Markethill',\\n      },\\n      {\\n        name: 'Markinch',\\n      },\\n      {\\n        name: 'Marlborough',\\n      },\\n      {\\n        name: 'Marlow',\\n      },\\n      {\\n        name: 'Maryport',\\n      },\\n      {\\n        name: 'Matlock',\\n      },\\n      {\\n        name: 'Maybole',\\n      },\\n      {\\n        name: 'Melksham',\\n      },\\n      {\\n        name: 'Melrose',\\n      },\\n      {\\n        name: 'Melton Mowbray',\\n      },\\n      {\\n        name: 'Merthyr Tydfil',\\n      },\\n      {\\n        name: 'Mexborough',\\n      },\\n      {\\n        name: 'Middleham',\\n      },\\n      {\\n        name: 'Middlesbrough',\\n      },\\n      {\\n        name: 'Middlewich',\\n      },\\n      {\\n        name: 'Midhurst',\\n      },\\n      {\\n        name: 'Midsomer Norton',\\n      },\\n      {\\n        name: 'Milford Haven',\\n      },\\n      {\\n        name: 'Milngavie',\\n      },\\n      {\\n        name: 'Milton Keynes',\\n      },\\n      {\\n        name: 'Minehead',\\n      },\\n      {\\n        name: 'Moffat',\\n      },\\n      {\\n        name: 'Mold',\\n      },\\n      {\\n        name: 'Monifieth',\\n      },\\n      {\\n        name: 'Monmouth',\\n      },\\n      {\\n        name: 'Montgomery',\\n      },\\n      {\\n        name: 'Montrose',\\n      },\\n      {\\n        name: 'Morecambe',\\n      },\\n      {\\n        name: 'Moreton in Marsh',\\n      },\\n      {\\n        name: 'Moretonhampstead',\\n      },\\n      {\\n        name: 'Morley',\\n      },\\n      {\\n        name: 'Morpeth',\\n      },\\n      {\\n        name: 'Motherwell',\\n      },\\n      {\\n        name: 'Musselburgh',\\n      },\\n      {\\n        name: 'Nailsea',\\n      },\\n      {\\n        name: 'Nailsworth',\\n      },\\n      {\\n        name: 'Nairn',\\n      },\\n      {\\n        name: 'Nantwich',\\n      },\\n      {\\n        name: 'Narberth',\\n      },\\n      {\\n        name: 'Neath',\\n      },\\n      {\\n        name: 'Needham Market',\\n      },\\n      {\\n        name: 'Neston',\\n      },\\n      {\\n        name: 'New Mills',\\n      },\\n      {\\n        name: 'New Milton',\\n      },\\n      {\\n        name: 'Newbury',\\n      },\\n      {\\n        name: 'Newcastle',\\n      },\\n      {\\n        name: 'Newcastle Emlyn',\\n      },\\n      {\\n        name: 'Newcastle upon Tyne',\\n      },\\n      {\\n        name: 'Newent',\\n      },\\n      {\\n        name: 'Newhaven',\\n      },\\n      {\\n        name: 'Newmarket',\\n      },\\n      {\\n        name: 'Newport',\\n      },\\n      {\\n        name: 'Newport Pagnell',\\n      },\\n      {\\n        name: 'Newport on Tay',\\n      },\\n      {\\n        name: 'Newquay',\\n      },\\n      {\\n        name: 'Newry',\\n      },\\n      {\\n        name: 'Newton Abbot',\\n      },\\n      {\\n        name: 'Newton Aycliffe',\\n      },\\n      {\\n        name: 'Newton Stewart',\\n      },\\n      {\\n        name: 'Newton le Willows',\\n      },\\n      {\\n        name: 'Newtown',\\n      },\\n      {\\n        name: 'Newtownabbey',\\n      },\\n      {\\n        name: 'Newtownards',\\n      },\\n      {\\n        name: 'Normanton',\\n      },\\n      {\\n        name: 'North Berwick',\\n      },\\n      {\\n        name: 'North Walsham',\\n      },\\n      {\\n        name: 'Northallerton',\\n      },\\n      {\\n        name: 'Northampton',\\n      },\\n      {\\n        name: 'Northwich',\\n      },\\n      {\\n        name: 'Norwich',\\n      },\\n      {\\n        name: 'Nottingham',\\n      },\\n      {\\n        name: 'Nuneaton',\\n      },\\n      {\\n        name: 'Oakham',\\n      },\\n      {\\n        name: 'Oban',\\n      },\\n      {\\n        name: 'Okehampton',\\n      },\\n      {\\n        name: 'Oldbury',\\n      },\\n      {\\n        name: 'Oldham',\\n      },\\n      {\\n        name: 'Oldmeldrum',\\n      },\\n      {\\n        name: 'Olney',\\n      },\\n      {\\n        name: 'Omagh',\\n      },\\n      {\\n        name: 'Ormskirk',\\n      },\\n      {\\n        name: 'Orpington',\\n      },\\n      {\\n        name: 'Ossett',\\n      },\\n      {\\n        name: 'Oswestry',\\n      },\\n      {\\n        name: 'Otley',\\n      },\\n      {\\n        name: 'Oundle',\\n      },\\n      {\\n        name: 'Oxford',\\n      },\\n      {\\n        name: 'Padstow',\\n      },\\n      {\\n        name: 'Paignton',\\n      },\\n      {\\n        name: 'Painswick',\\n      },\\n      {\\n        name: 'Paisley',\\n      },\\n      {\\n        name: 'Peebles',\\n      },\\n      {\\n        name: 'Pembroke',\\n      },\\n      {\\n        name: 'Penarth',\\n      },\\n      {\\n        name: 'Penicuik',\\n      },\\n      {\\n        name: 'Penistone',\\n      },\\n      {\\n        name: 'Penmaenmawr',\\n      },\\n      {\\n        name: 'Penrith',\\n      },\\n      {\\n        name: 'Penryn',\\n      },\\n      {\\n        name: 'Penzance',\\n      },\\n      {\\n        name: 'Pershore',\\n      },\\n      {\\n        name: 'Perth',\\n      },\\n      {\\n        name: 'Peterborough',\\n      },\\n      {\\n        name: 'Peterhead',\\n      },\\n      {\\n        name: 'Peterlee',\\n      },\\n      {\\n        name: 'Petersfield',\\n      },\\n      {\\n        name: 'Petworth',\\n      },\\n      {\\n        name: 'Pickering',\\n      },\\n      {\\n        name: 'Pitlochry',\\n      },\\n      {\\n        name: 'Pittenweem',\\n      },\\n      {\\n        name: 'Plymouth',\\n      },\\n      {\\n        name: 'Pocklington',\\n      },\\n      {\\n        name: 'Polegate',\\n      },\\n      {\\n        name: 'Pontefract',\\n      },\\n      {\\n        name: 'Pontypridd',\\n      },\\n      {\\n        name: 'Poole',\\n      },\\n      {\\n        name: 'Port Talbot',\\n      },\\n      {\\n        name: 'Portadown',\\n      },\\n      {\\n        name: 'Portaferry',\\n      },\\n      {\\n        name: 'Porth',\\n      },\\n      {\\n        name: 'Porthcawl',\\n      },\\n      {\\n        name: 'Porthmadog',\\n      },\\n      {\\n        name: 'Portishead',\\n      },\\n      {\\n        name: 'Portrush',\\n      },\\n      {\\n        name: 'Portsmouth',\\n      },\\n      {\\n        name: 'Portstewart',\\n      },\\n      {\\n        name: 'Potters Bar',\\n      },\\n      {\\n        name: 'Potton',\\n      },\\n      {\\n        name: 'Poulton le Fylde',\\n      },\\n      {\\n        name: 'Prescot',\\n      },\\n      {\\n        name: 'Prestatyn',\\n      },\\n      {\\n        name: 'Presteigne',\\n      },\\n      {\\n        name: 'Preston',\\n      },\\n      {\\n        name: 'Prestwick',\\n      },\\n      {\\n        name: 'Princes Risborough',\\n      },\\n      {\\n        name: 'Prudhoe',\\n      },\\n      {\\n        name: 'Pudsey',\\n      },\\n      {\\n        name: 'Pwllheli',\\n      },\\n      {\\n        name: 'Ramsgate',\\n      },\\n      {\\n        name: 'Randalstown',\\n      },\\n      {\\n        name: 'Rayleigh',\\n      },\\n      {\\n        name: 'Reading',\\n      },\\n      {\\n        name: 'Redcar',\\n      },\\n      {\\n        name: 'Redditch',\\n      },\\n      {\\n        name: 'Redhill',\\n      },\\n      {\\n        name: 'Redruth',\\n      },\\n      {\\n        name: 'Reigate',\\n      },\\n      {\\n        name: 'Retford',\\n      },\\n      {\\n        name: 'Rhayader',\\n      },\\n      {\\n        name: 'Rhuddlan',\\n      },\\n      {\\n        name: 'Rhyl',\\n      },\\n      {\\n        name: 'Richmond',\\n      },\\n      {\\n        name: 'Rickmansworth',\\n      },\\n      {\\n        name: 'Ringwood',\\n      },\\n      {\\n        name: 'Ripley',\\n      },\\n      {\\n        name: 'Ripon',\\n      },\\n      {\\n        name: 'Rochdale',\\n      },\\n      {\\n        name: 'Rochester',\\n      },\\n      {\\n        name: 'Rochford',\\n      },\\n      {\\n        name: 'Romford',\\n      },\\n      {\\n        name: 'Romsey',\\n      },\\n      {\\n        name: 'Ross on Wye',\\n      },\\n      {\\n        name: 'Rostrevor',\\n      },\\n      {\\n        name: 'Rothbury',\\n      },\\n      {\\n        name: 'Rotherham',\\n      },\\n      {\\n        name: 'Rothesay',\\n      },\\n      {\\n        name: 'Rowley Regis',\\n      },\\n      {\\n        name: 'Royston',\\n      },\\n      {\\n        name: 'Rugby',\\n      },\\n      {\\n        name: 'Rugeley',\\n      },\\n      {\\n        name: 'Runcorn',\\n      },\\n      {\\n        name: 'Rushden',\\n      },\\n      {\\n        name: 'Rutherglen',\\n      },\\n      {\\n        name: 'Ruthin',\\n      },\\n      {\\n        name: 'Ryde',\\n      },\\n      {\\n        name: 'Rye',\\n      },\\n      {\\n        name: 'Saffron Walden',\\n      },\\n      {\\n        name: 'Saintfield',\\n      },\\n      {\\n        name: 'Salcombe',\\n      },\\n      {\\n        name: 'Sale',\\n      },\\n      {\\n        name: 'Salford',\\n      },\\n      {\\n        name: 'Salisbury',\\n      },\\n      {\\n        name: 'Saltash',\\n      },\\n      {\\n        name: 'Saltcoats',\\n      },\\n      {\\n        name: 'Sandbach',\\n      },\\n      {\\n        name: 'Sandhurst',\\n      },\\n      {\\n        name: 'Sandown',\\n      },\\n      {\\n        name: 'Sandwich',\\n      },\\n      {\\n        name: 'Sandy',\\n      },\\n      {\\n        name: 'Sawbridgeworth',\\n      },\\n      {\\n        name: 'Saxmundham',\\n      },\\n      {\\n        name: 'Scarborough',\\n      },\\n      {\\n        name: 'Scunthorpe',\\n      },\\n      {\\n        name: 'Seaford',\\n      },\\n      {\\n        name: 'Seaton',\\n      },\\n      {\\n        name: 'Sedgefield',\\n      },\\n      {\\n        name: 'Selby',\\n      },\\n      {\\n        name: 'Selkirk',\\n      },\\n      {\\n        name: 'Selsey',\\n      },\\n      {\\n        name: 'Settle',\\n      },\\n      {\\n        name: 'Sevenoaks',\\n      },\\n      {\\n        name: 'Shaftesbury',\\n      },\\n      {\\n        name: 'Shanklin',\\n      },\\n      {\\n        name: 'Sheerness',\\n      },\\n      {\\n        name: 'Sheffield',\\n      },\\n      {\\n        name: 'Shepshed',\\n      },\\n      {\\n        name: 'Shepton Mallet',\\n      },\\n      {\\n        name: 'Sherborne',\\n      },\\n      {\\n        name: 'Sheringham',\\n      },\\n      {\\n        name: 'Shildon',\\n      },\\n      {\\n        name: 'Shipston on Stour',\\n      },\\n      {\\n        name: 'Shoreham by Sea',\\n      },\\n      {\\n        name: 'Shrewsbury',\\n      },\\n      {\\n        name: 'Sidmouth',\\n      },\\n      {\\n        name: 'Sittingbourne',\\n      },\\n      {\\n        name: 'Skegness',\\n      },\\n      {\\n        name: 'Skelmersdale',\\n      },\\n      {\\n        name: 'Skipton',\\n      },\\n      {\\n        name: 'Sleaford',\\n      },\\n      {\\n        name: 'Slough',\\n      },\\n      {\\n        name: 'Smethwick',\\n      },\\n      {\\n        name: 'Soham',\\n      },\\n      {\\n        name: 'Solihull',\\n      },\\n      {\\n        name: 'Somerton',\\n      },\\n      {\\n        name: 'South Molton',\\n      },\\n      {\\n        name: 'South Shields',\\n      },\\n      {\\n        name: 'South Woodham Ferrers',\\n      },\\n      {\\n        name: 'Southam',\\n      },\\n      {\\n        name: 'Southampton',\\n      },\\n      {\\n        name: 'Southborough',\\n      },\\n      {\\n        name: 'Southend on Sea',\\n      },\\n      {\\n        name: 'Southport',\\n      },\\n      {\\n        name: 'Southsea',\\n      },\\n      {\\n        name: 'Southwell',\\n      },\\n      {\\n        name: 'Southwold',\\n      },\\n      {\\n        name: 'Spalding',\\n      },\\n      {\\n        name: 'Spennymoor',\\n      },\\n      {\\n        name: 'Spilsby',\\n      },\\n      {\\n        name: 'Stafford',\\n      },\\n      {\\n        name: 'Staines',\\n      },\\n      {\\n        name: 'Stamford',\\n      },\\n      {\\n        name: 'Stanley',\\n      },\\n      {\\n        name: 'Staveley',\\n      },\\n      {\\n        name: 'Stevenage',\\n      },\\n      {\\n        name: 'Stirling',\\n      },\\n      {\\n        name: 'Stockport',\\n      },\\n      {\\n        name: 'Stockton on Tees',\\n      },\\n      {\\n        name: 'Stoke on Trent',\\n      },\\n      {\\n        name: 'Stone',\\n      },\\n      {\\n        name: 'Stowmarket',\\n      },\\n      {\\n        name: 'Strabane',\\n      },\\n      {\\n        name: 'Stranraer',\\n      },\\n      {\\n        name: 'Stratford upon Avon',\\n      },\\n      {\\n        name: 'Strood',\\n      },\\n      {\\n        name: 'Stroud',\\n      },\\n      {\\n        name: 'Sudbury',\\n      },\\n      {\\n        name: 'Sunderland',\\n      },\\n      {\\n        name: 'Sutton Coldfield',\\n      },\\n      {\\n        name: 'Sutton in Ashfield',\\n      },\\n      {\\n        name: 'Swadlincote',\\n      },\\n      {\\n        name: 'Swanage',\\n      },\\n      {\\n        name: 'Swanley',\\n      },\\n      {\\n        name: 'Swansea',\\n      },\\n      {\\n        name: 'Swindon',\\n      },\\n      {\\n        name: 'Tadcaster',\\n      },\\n      {\\n        name: 'Tadley',\\n      },\\n      {\\n        name: 'Tain',\\n      },\\n      {\\n        name: 'Talgarth',\\n      },\\n      {\\n        name: 'Tamworth',\\n      },\\n      {\\n        name: 'Taunton',\\n      },\\n      {\\n        name: 'Tavistock',\\n      },\\n      {\\n        name: 'Teignmouth',\\n      },\\n      {\\n        name: 'Telford',\\n      },\\n      {\\n        name: 'Tenby',\\n      },\\n      {\\n        name: 'Tenterden',\\n      },\\n      {\\n        name: 'Tetbury',\\n      },\\n      {\\n        name: 'Tewkesbury',\\n      },\\n      {\\n        name: 'Thame',\\n      },\\n      {\\n        name: 'Thatcham',\\n      },\\n      {\\n        name: 'Thaxted',\\n      },\\n      {\\n        name: 'Thetford',\\n      },\\n      {\\n        name: 'Thirsk',\\n      },\\n      {\\n        name: 'Thornbury',\\n      },\\n      {\\n        name: 'Thrapston',\\n      },\\n      {\\n        name: 'Thurso',\\n      },\\n      {\\n        name: 'Tilbury',\\n      },\\n      {\\n        name: 'Tillicoultry',\\n      },\\n      {\\n        name: 'Tipton',\\n      },\\n      {\\n        name: 'Tiverton',\\n      },\\n      {\\n        name: 'Tobermory',\\n      },\\n      {\\n        name: 'Todmorden',\\n      },\\n      {\\n        name: 'Tonbridge',\\n      },\\n      {\\n        name: 'Torpoint',\\n      },\\n      {\\n        name: 'Torquay',\\n      },\\n      {\\n        name: 'Totnes',\\n      },\\n      {\\n        name: 'Totton',\\n      },\\n      {\\n        name: 'Towcester',\\n      },\\n      {\\n        name: 'Tredegar',\\n      },\\n      {\\n        name: 'Tregaron',\\n      },\\n      {\\n        name: 'Tring',\\n      },\\n      {\\n        name: 'Troon',\\n      },\\n      {\\n        name: 'Trowbridge',\\n      },\\n      {\\n        name: 'Truro',\\n      },\\n      {\\n        name: 'Tunbridge Wells',\\n      },\\n      {\\n        name: 'Tywyn',\\n      },\\n      {\\n        name: 'Uckfield',\\n      },\\n      {\\n        name: 'Ulverston',\\n      },\\n      {\\n        name: 'Uppingham',\\n      },\\n      {\\n        name: 'Usk',\\n      },\\n      {\\n        name: 'Uttoxeter',\\n      },\\n      {\\n        name: 'Ventnor',\\n      },\\n      {\\n        name: 'Verwood',\\n      },\\n      {\\n        name: 'Wadebridge',\\n      },\\n      {\\n        name: 'Wadhurst',\\n      },\\n      {\\n        name: 'Wakefield',\\n      },\\n      {\\n        name: 'Wallasey',\\n      },\\n      {\\n        name: 'Wallingford',\\n      },\\n      {\\n        name: 'Walsall',\\n      },\\n      {\\n        name: 'Waltham Abbey',\\n      },\\n      {\\n        name: 'Waltham Cross',\\n      },\\n      {\\n        name: 'Walton on Thames',\\n      },\\n      {\\n        name: 'Walton on the Naze',\\n      },\\n      {\\n        name: 'Wantage',\\n      },\\n      {\\n        name: 'Ware',\\n      },\\n      {\\n        name: 'Wareham',\\n      },\\n      {\\n        name: 'Warminster',\\n      },\\n      {\\n        name: 'Warrenpoint',\\n      },\\n      {\\n        name: 'Warrington',\\n      },\\n      {\\n        name: 'Warwick',\\n      },\\n      {\\n        name: 'Washington',\\n      },\\n      {\\n        name: 'Watford',\\n      },\\n      {\\n        name: 'Wednesbury',\\n      },\\n      {\\n        name: 'Wednesfield',\\n      },\\n      {\\n        name: 'Wellingborough',\\n      },\\n      {\\n        name: 'Wellington',\\n      },\\n      {\\n        name: 'Wells',\\n      },\\n      {\\n        name: 'Wells next the Sea',\\n      },\\n      {\\n        name: 'Welshpool',\\n      },\\n      {\\n        name: 'Welwyn Garden City',\\n      },\\n      {\\n        name: 'Wem',\\n      },\\n      {\\n        name: 'Wendover',\\n      },\\n      {\\n        name: 'West Bromwich',\\n      },\\n      {\\n        name: 'Westbury',\\n      },\\n      {\\n        name: 'Westerham',\\n      },\\n      {\\n        name: 'Westhoughton',\\n      },\\n      {\\n        name: 'Weston super Mare',\\n      },\\n      {\\n        name: 'Wetherby',\\n      },\\n      {\\n        name: 'Weybridge',\\n      },\\n      {\\n        name: 'Weymouth',\\n      },\\n      {\\n        name: 'Whaley Bridge',\\n      },\\n      {\\n        name: 'Whitby',\\n      },\\n      {\\n        name: 'Whitchurch',\\n      },\\n      {\\n        name: 'Whitehaven',\\n      },\\n      {\\n        name: 'Whitley Bay',\\n      },\\n      {\\n        name: 'Whitnash',\\n      },\\n      {\\n        name: 'Whitstable',\\n      },\\n      {\\n        name: 'Whitworth',\\n      },\\n      {\\n        name: 'Wick',\\n      },\\n      {\\n        name: 'Wickford',\\n      },\\n      {\\n        name: 'Widnes',\\n      },\\n      {\\n        name: 'Wigan',\\n      },\\n      {\\n        name: 'Wigston',\\n      },\\n      {\\n        name: 'Wigtown',\\n      },\\n      {\\n        name: 'Willenhall',\\n      },\\n      {\\n        name: 'Wincanton',\\n      },\\n      {\\n        name: 'Winchester',\\n      },\\n      {\\n        name: 'Windermere',\\n      },\\n      {\\n        name: 'Winsford',\\n      },\\n      {\\n        name: 'Winslow',\\n      },\\n      {\\n        name: 'Wisbech',\\n      },\\n      {\\n        name: 'Witham',\\n      },\\n      {\\n        name: 'Withernsea',\\n      },\\n      {\\n        name: 'Witney',\\n      },\\n      {\\n        name: 'Woburn',\\n      },\\n      {\\n        name: 'Woking',\\n      },\\n      {\\n        name: 'Wokingham',\\n      },\\n      {\\n        name: 'Wolverhampton',\\n      },\\n      {\\n        name: 'Wombwell',\\n      },\\n      {\\n        name: 'Woodbridge',\\n      },\\n      {\\n        name: 'Woodstock',\\n      },\\n      {\\n        name: 'Wootton Bassett',\\n      },\\n      {\\n        name: 'Worcester',\\n      },\\n      {\\n        name: 'Workington',\\n      },\\n      {\\n        name: 'Worksop',\\n      },\\n      {\\n        name: 'Worthing',\\n      },\\n      {\\n        name: 'Wotton under Edge',\\n      },\\n      {\\n        name: 'Wrexham',\\n      },\\n      {\\n        name: 'Wymondham',\\n      },\\n      {\\n        name: 'Yarm',\\n      },\\n      {\\n        name: 'Yarmouth',\\n      },\\n      {\\n        name: 'Yate',\\n      },\\n      {\\n        name: 'Yateley',\\n      },\\n      {\\n        name: 'Yeadon',\\n      },\\n      {\\n        name: 'Yeovil',\\n      },\\n      {\\n        name: 'York',\\n      },\\n      //London Boroughs - add other major cities later\\n      {\\n        name: 'Camden',\\n      },\\n      {\\n        name: 'Royal Borough of Greenwich',\\n      },\\n      {\\n        name: 'Hackney',\\n      },\\n      {\\n        name: 'Hammersmith',\\n      },\\n      {\\n        name: 'Fulham',\\n      },\\n      {\\n        name: 'Islington',\\n      },\\n      {\\n        name: 'Kensington',\\n      },\\n      {\\n        name: 'Chelsea',\\n      },\\n      {\\n        name: 'Lambeth',\\n      },\\n      {\\n        name: 'Lewisham',\\n      },\\n      {\\n        name: 'Southwark',\\n      },\\n      {\\n        name: 'Tower Hamlets',\\n      },\\n      {\\n        name: 'Wandsworth',\\n      },\\n      {\\n        name: 'City of Westminster',\\n      },\\n      {\\n        name: 'Barking',\\n      },\\n      {\\n        name: 'Dagenham',\\n      },\\n      {\\n        name: 'Barnet',\\n      },\\n      {\\n        name: 'Bexley',\\n      },\\n      {\\n        name: 'Brent',\\n      },\\n      {\\n        name: 'Bromley',\\n      },\\n      {\\n        name: 'Croydon',\\n      },\\n      {\\n        name: 'Ealing',\\n      },\\n      {\\n        name: 'Enfield',\\n      },\\n      {\\n        name: 'Haringey',\\n      },\\n      {\\n        name: 'Harrow',\\n      },\\n      {\\n        name: 'Havering',\\n      },\\n      {\\n        name: 'Hillingdon',\\n      },\\n      {\\n        name: 'Hounslow',\\n      },\\n      {\\n        name: 'Royal Borough of Kingston upon Thames',\\n      },\\n      {\\n        name: 'Merton',\\n      },\\n      {\\n        name: 'Newham',\\n      },\\n      {\\n        name: 'Redbridge',\\n      },\\n      {\\n        name: 'Richmond upon Thames',\\n      },\\n      {\\n        name: 'Sutton',\\n      },\\n      {\\n        name: 'Waltham Forest',\\n      },\\n    ]\\n  },\\n  {\\n    title: 'IT',\\n    cities: [\\n      {\\n        name: 'Scala',\\n      },\\n      {\\n        name: 'Milan',\\n      },\\n      {\\n        name: 'Naples',\\n      }\\n    ]\\n  }\\n];\",\"import React from 'react'\\n\\n\\nclass Now extends React.Component {\\n\\n    render() {\\n\\n        return (\\n            <div className=\\\"now\\\">\\n                <div className=\\\"weatherTile white\\\">\\n                <p className=\\\"gravitas\\\">\\n                Now\\n                </p>\\n                <img src={\\\"//openweathermap.org/img/w/\\\" + this.props.icon + \\\".png\\\"} />\\n                <h1>{this.props.temperature}°</h1>\\n                <p className=\\\"gravitas\\\">{this.props.description}.</p>\\n\\n                <img \\n                        className=\\\"windArrow\\\" \\n                        src={require('../img/arrow.svg')} \\n                        style={{transform: `rotate(${this.props.windDeg}deg)`, \\n                        width: `20px`}} \\n                    />\\n                    <p className=\\\"gravitas\\\">Wind speed: {this.props.windSpeed}mph</p>\\n                    <div className=\\\"sunsetGraph\\\">\\n                        <div className=\\\"sun\\\" style={{marginRight: `${this.props.daylightLeft}%`}}></div>\\n                    </div>\\n                    <p className='gravitas sunsetCaption'>\\n                        <div className=\\\"SunriseTime\\\">Sunrise: {this.props.sunrise}</div>\\n                        <div className=\\\"sunsetDivider\\\"> - </div>\\n                        <div className=\\\"SunsetTime\\\">Sunset: {this.props.sunset}</div> \\n                    </p>\\n                </div>\\n                <div className=\\\"messages\\\">\\n                <h1>{this.props.message}</h1>\\n                <h4>{this.props.subMessage}</h4>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n\\n\\nexport default Now\\n\",\"import React from 'react'\\n\\n\\nclass Forecast extends React.Component {\\n\\n    humanReadable = () => {\\n        var i = 0;\\n            this.props.currentForecast.list.map(item => {\\n                //Human readable time\\n                var secondsSinceEpoch = this.props.currentForecast.list[i].dt;\\n                var date = new Date(secondsSinceEpoch * 1000);\\n                var days = [\\\"Sunday\\\", \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", \\\"Saturday\\\"];\\n                var day = days[date.getUTCDay()];\\n                var utcHour = date.getUTCHours();\\n                if (utcHour > 12) {\\n                    var hour = utcHour - 12;\\n                    hour = hour + \\\"pm\\\";\\n                }\\n                else {\\n                    if (utcHour === 12)  {\\n                        var hour = utcHour + \\\"pm\\\"\\n                    }\\n                    else {\\n                        if (utcHour === 0) {\\n                            utcHour = 12;\\n                        }\\n                        var hour = utcHour + \\\"am\\\"\\n                    }\\n                }\\n                //var dateStr = [day, hour].join(\\\" \\\"); \\n                //this.props.currentForecast.list[i].dt = dateStr;\\n                this.props.currentForecast.list[i].dt = day;\\n                this.props.currentForecast.list[i].sys.pod = hour;\\n                \\n                //human readable temp\\n                var humanTemp = Math.floor(item.main.temp);\\n                humanTemp = humanTemp + '°'\\n                this.props.currentForecast.list[i].main.temp = humanTemp;\\n                //meters per second to MPH\\n                var imperialWind = Math.floor(this.props.currentForecast.list[i].wind.speed *  2.237);\\n                this.props.currentForecast.list[i].wind.speed = imperialWind;\\n\\n                i++;\\n                this.forceUpdate();\\n            })\\n    }\\n\\n\\n    componentDidUpdate(prevProps) {\\n        if (this.props.currentForecast.list[0].dt !== prevProps.currentForecast.list[0].dt) {\\n            this.humanReadable();\\n        }\\n    }\\n    \\n\\n   State = {\\n        0:0\\n    }\\n\\n  \\n\\n    componentDidMount() {\\n        this.humanReadable();\\n    }\\n\\n    \\n    render() {\\n\\n            return (\\n\\n                this.props.currentForecast.list.map(item => (\\n                       \\n                    <div className=\\\"weatherTile\\\" key={item.dt_txt} >\\n                        <p className=\\\"gravitas\\\">{item.dt}</p>\\n                        <p className=\\\"gravitas\\\">{item.sys.pod}</p>\\n                        <p className=\\\"thick judgement\\\">{item.weather[0].icon === '01d' ? \\\"Fuckin' Lush\\\" : item.weather[0].icon === '01n' ? 'STARFACE' : item.weather[0].icon === '02d' ? 'Decent' : item.weather[0].icon === '02n' ? 'Decent' : item.weather[0].icon === '03d' ? 'Could be shitter' : item.weather[0].icon === '03n' ? 'Could be shitter' : item.weather[0].icon === '04d' ? 'A bit bollocks' : item.weather[0].icon === '04n' ? 'normal' : item.weather[0].icon === '09d' ? 'shite': item.weather[0].icon === '09n' ? 'shite' : item.weather[0].icon === '10d' ? 'crap': item.weather[0].icon === '10n' ? 'crap' : item.weather[0].icon === '11d' ? 'Kapow!': item.weather[0].icon === '11n' ? 'Kapow!' : item.weather[0].icon === '13d' ? 'FUCKING SNOW!': item.weather[0].icon === '13n' ? 'FUCKING SNOW!' : 'FUCKING MIST'}</p>\\n                        <img src={\\\"//openweathermap.org/img/w/\\\" + item.weather[0].icon + \\\".png\\\"} />\\n                        <p className=\\\"thick judgement\\\">{item.main.temp}</p>\\n                        <p className=\\\"gravitas\\\">{item.weather[0].description}</p>\\n                        <img \\n                            className=\\\"windArrow\\\" \\n                            src={require('../img/arrow.svg')} \\n                            style={{transform: `rotate(${item.wind.deg}deg)`, \\n                            width: `20px`}} \\n                        />\\n                        <p className=\\\"gravitas\\\">{item.wind.speed}mph</p>\\n                    </div>\\n                ))\\n            )\\n    }\\n}\\n\\nexport default Forecast\\n\\n\\n\",\"import React from 'react'\\nimport Forecast from './forecast';\\n\\n\\n\\nclass WeatherRow extends React.Component {\\n\\n    render() {\\n\\n        return (\\n            <React.Fragment>\\n                <div className=\\\"scrollers\\\">\\n                <div className=\\\"gravitas\\\" onClick={this.props.handleLeftClick}><img src={require('../img/leftarrow.svg')} alt=\\\"Left\\\"/> Scroll</div>\\n                <div className=\\\"border\\\"></div>\\n                <div className=\\\"gravitas\\\" onClick={this.props.handleRightClick}>Scroll <img src={require('../img/rightarrow.svg')} alt=\\\"Right\\\"/></div>\\n                </div>\\n                <div className=\\\"weatherRow\\\" id=\\\"weatherRow\\\">\\n                {this.props.currentForecast ? <Forecast currentForecast={this.props.currentForecast} /> : null}\\n                </div>\\n            </React.Fragment>\\n        )\\n    }\\n}\\n\\n\\nexport default WeatherRow\\n\",\"import React from 'react'\\n\\n\\nclass ShitTag extends React.Component {\\n\\n    render() {\\n\\n        return (\\n            <div className=\\\"ShitTag\\\">\\n                Shitstorm <span className=\\\"version\\\">beta</span> \\n            </div>\\n        )\\n    }\\n}\\n\\n\\nexport default ShitTag\\n\",\"import React from 'react'\\n\\n\\n\\n\\nclass WTF extends React.Component {\\n\\n    constructor(props, context) { \\n        super(props, context);\\n     \\n        this.state = {\\n           WTF: false\\n        };\\n\\n        this.handleClick = this.handleClick.bind(this);\\n\\n     };\\n\\n     handleClick() {\\n        this.setState(prevState => ({\\n            WTF: !prevState.WTF\\n        }));\\n      }\\n\\n    render() {\\n        return !this.state.WTF\\n        ?    <div className=\\\"WTF\\\" onClick={this.handleClick}>\\n                WTF?\\n            </div>\\n        :   <div className=\\\"WTFexpanded\\\">\\n\\n                <div className=\\\"close\\\" onClick={this.handleClick}>X</div>\\n                <div className=\\\"WTFwords\\\">\\n                    <h1>What the fuck is all this?</h1>\\n\\n                    <h2>Why did you bring this upon the world?</h2>\\n                    <p>Short answer: because I can. Longer answer: because I'm a <a href=\\\"https://thisiswilf.com\\\">designer and developer</a> who took five years out to found <a href=\\\"https://ubrew.cc/\\\">Ubrew</a>, an open brewery where anyone can brew their own beer. When I came back to design and development all the cool kids were talking about a new code library called <a href=\\\"https://reactjs.org/\\\">ReactJS</a>, which was here to kill jQuery. Being someone who used a lot of jQuery, this was concerning. I resolved to learn ReactJS, and make a shitting sweary weather app at the same fucking time. Bon Appetit, motherfucker.</p>\\n                    <h2>Is this the very best weather app you can make?</h2>\\n                    <p>No. It's the very best weather app I wanted to make in the time I had with the tools I had. I didn't want to spend more than a few days on this, and I didn't want to spend any real money on it.</p>\\n                    <h2>Hey! This delightful weather app doesn't work in my country!</h2>\\n                    <p>Yeah. Originally the vision was to make this thing international, and the code actually accomodates that happening later if needs be. But right now that's beyond the scope of what I can commit to, due to timezone issues and locality issues. Both could be solved with cash, so if this app ever ends up being monetised, I'll probably make it international.</p>\\n                    <h2>Timezone issues?</h2>\\n                    <p><a href=\\\"https://www.youtube.com/watch?time_continue=1&v=-5wpm-gesOY\\\">Watch this video</a>, and see what timezone issues can do to an otherwise sane and pleasant individual.</p>\\n                    <h2>Locality issues?</h2>\\n                    <p>I don't want to drown you in nerd talk, but the system saves money by looking at what you search for, checking it against a list of towns you're allowed to search for, and then only calling the weather station if what you're searching for is going to come up with something that makes sense. I've put together a list of every town in the UK, which means you can only search for towns in the UK.</p>\\n                    <h2>But I live in Little Piddlinghoe on Muckmire, and I can't check the weather.</h2>\\n                    <p>That's because Little Piddlinghoe on Muckmire is a tiny Hamlet lurking near an unmapped village, which is itself a day's panicked run from the nearest town. Search for the closest town instead.</p>\\n                    <h2>It says it's raining outside, but I assure you it's not.</h2>\\n                    <p>Shitstorm gets all its info from <a href=\\\"https://openweathermap.org/\\\">openweathermap.org</a>. Type your town into their engine and you should see the same result as you do on Shitstorm, just without all the swearing. If their info is wrong, they have a button that says \\\"Wrong data?\\\". Click that button and tell them all about it.</p>\\n                    <h2>It said the weather where I live is going to be grim five days in a row.</h2>\\n                    <p>Please address complaints surrounding the quality of your weather to your local borough authority.</p>\\n                    <h2>Can you make something for me?</h2>\\n                    <p>I'd love to. Head over to <a href=\\\"https://thisiswilf.com\\\">thisiswilf.com</a> or just email me at wilf@wilfhorsfall.com.</p>\\n                </div>\\n            </div>\\n    }\\n}\\n\\n\\nexport default WTF\\n\",\"import React, { Component } from 'react';\\nimport Autosuggest from 'react-autosuggest';\\nimport {cities} from './variables.js';\\nimport Now from './Components/now';\\nimport WeatherRow from './Components/weatherrow';\\nimport ShitTag from './Components/shittag';\\nimport WTF from './Components/wtf';\\nimport ReactGA from 'react-ga';\\n\\n\\nexport var city = 'London';\\nexport var country = 'GB'\\nexport const Api_Key = \\\"8c5021109e1918aa1c478ce6b4f53c27\\\";\\nexport var location = '';\\n\\n// ReactGA.initialize('UA-136012452-1');\\n// ReactGA.pageview(window.location.pathname + window.location.search);\\n// console.log(window.location.pathname + window.location.search)\\n\\nfunction initializeReactGA() {\\n  ReactGA.initialize('UA-136012452-1');\\n  // ReactGA.initialize('UA-136012452-1', {\\n  //   debug: true\\n  // });\\n  ReactGA.pageview('/landingPage');\\n  console.log('GA')\\n}\\n\\ninitializeReactGA();\\n\\n//this is all stuff for Autosuggest\\nfunction escapeRegexCharacters(str) {\\n  return str.replace(/[.*+?^${}()|[\\\\]\\\\\\\\]/g, '\\\\\\\\$&');\\n}\\n\\nfunction getSuggestions(value) {\\n  const escapedValue = escapeRegexCharacters(value.trim());\\n  \\n  if (escapedValue === '') {\\n    return [];\\n  }\\n\\n  const regex = new RegExp('^' + escapedValue, 'i');\\n\\n  //autosuggest checks our list of pre-approved cities that can trigger an API call\\n  return cities\\n    .map(section => {\\n      return {\\n        title: section.title,\\n        cities: section.cities.filter(language => regex.test(language.name)) //we convert both the user-inputted search term and the cities themselves to lowercase so as to make searches case insensitive\\n      };\\n    })\\n    .filter(section => section.cities.length > 0);\\n}\\n\\n\\nfunction getSuggestionValue(suggestion) {\\n  return suggestion.name;\\n}\\n\\nfunction renderSuggestion(suggestion) {\\n  return (\\n    <span>{suggestion.name}</span>\\n  );\\n}\\n\\nfunction renderSectionTitle(section) {\\n  return (\\n    <strong>{section.title}</strong>\\n  );\\n}\\n\\nfunction getSectionSuggestions(section) {\\n  return section.cities;\\n}\\n\\n//here we check the country the city belongs to. Right now there is only one possible country, but in future more may be added\\nfunction getCountry(cities, prop, value) {\\n  var result = cities.find(function (language) {\\n    return language.cities.some(function (item) {\\n      return item[prop].toLowerCase() === value.toLowerCase()\\n    })\\n  })\\n\\n  return result ? result.title : null\\n}\\n\\n\\n\\nclass App extends React.Component {\\n\\n  state = {\\n    temperature: 'Loading', //the temperature doubles as a loading notification if the connection is slow\\n    city: '',\\n    country: '',\\n    humidity: '',\\n    description: '',\\n    error: '',\\n    value: '',\\n    suggestions: [],\\n    message: '',\\n    subMessage: ''\\n  }\\n\\n//this function is triggered when OpenWeather responds to the first of our two API calls\\n  onResponse = () => {\\n    //first we want to figure out when the sun rises today. To do that, we start by converting the date from seconds sinve 1970 to milliseconds since 1970\\n    var sunriseSinceEpoch = new Date(this.state.response.sys.sunrise * 1000);\\n    //then we convert that value to UTC time, first with the hour, then with the minute\\n    var sunriseHour = sunriseSinceEpoch.getUTCHours();\\n    var sunriseMinute = sunriseSinceEpoch.getUTCMinutes();\\n    //if the minute is less than 10, we stick a 0 in front of it\\n    sunriseMinute < 10 ? sunriseMinute = '0' + sunriseMinute : sunriseMinute = sunriseMinute;\\n    //then we join the two\\n    var humanSunrise = sunriseHour + ':' + sunriseMinute + 'AM';\\n    //then we repeat the above, but with sunset\\n    var sunsetSinceEpoch = new Date(this.state.response.sys.sunset * 1000);\\n    var sunsetHour = sunsetSinceEpoch.getUTCHours();\\n    //we don't want a 24hr clock, so minusing 12 from the sunset hour\\n    sunsetHour = sunsetHour - 12;\\n    var sunsetMinute = sunsetSinceEpoch.getUTCMinutes();\\n    sunsetMinute < 10 ? sunsetMinute = '0' + sunsetMinute : sunsetMinute = sunsetMinute;\\n    //now we figure out what percentage of the day is left until sunset\\n    var currentTime = new Date();\\n    var a = sunsetSinceEpoch - currentTime;\\n    var c = sunsetSinceEpoch - sunriseSinceEpoch;\\n    var n =  a / c * 100;\\n    //n is percentage of daylight left - this should be the CSS margin-right value of the sun if A is smaller than C - see now.js in the components folder\\n    var humanSunset = sunsetHour + ':' + sunsetMinute + 'PM';\\n    if(city && country){\\n      //this is a CSS workaround - margin-right: 97% warps the sun div, so the state.daylightLeft value has a maximum of 96\\n      if (n <= 96) {\\n        this.setState({\\n          daylightLeft: n\\n        })\\n        if (n <= 0) { // make sure we don't have the sun creep off the graph after sunset\\n          this.setState({\\n            daylightLeft: 0\\n          })\\n        }\\n      }\\n      else {\\n        this.setState({\\n          daylightLeft: 96\\n        })\\n      }\\n      //now we set state with the rest of the info sent from the API\\n      this.setState({\\n        temperature: Math.round(this.state.response.main.temp),\\n        city: this.state.response.name,\\n        country: this.state.response.sys.country,\\n        sunset: humanSunset,\\n        sunrise: humanSunrise,\\n        humidity: this.state.response.main.humidity,\\n        description: this.state.response.weather[0].description,\\n        icon: this.state.response.weather[0].icon,\\n        error: \\\"\\\",\\n        windSpeed: this.state.response.wind.speed,\\n        windDeg: this.state.response.wind.deg,\\n      })\\n      //here we write our sweary messages based on the weather. The method is relatively crude, drawing the bulk of the info from the icon. Over time temperature and windspeed could finetune these messages.\\n\\n      if (this.state.icon === '01d') {\\n        if (this.state.temp > 15) {\\n          this.setState({\\n            message: 'Fucking Lush',\\n            subMessage: \\\"If you had friends you could go outside and play!\\\"\\n          })\\n        } else {\\n          this.setState({\\n            message: 'Pretty, but dissappointingly cold.',\\n            subMessage: \\\"Like you, except it's pretty.\\\"\\n          })\\n        }\\n      }\\n\\n      if (this.state.icon === '01n') {\\n        this.setState({\\n          message: 'Starry motherfucker',\\n          subMessage: \\\"We are all in the gutter, but some of us are looking at the stars. You're just in the gutter.\\\"\\n        })\\n      }\\n\\n      switch (this.state.icon) {\\n        case '02d' :\\n        case '02n' :\\n        this.setState({\\n          message: 'Not too shite.',\\n          subMessage: \\\"Unlike you. You're really shite.\\\"\\n        })\\n        if (this.state.temp < 5) {\\n          this.setState({\\n            message: \\\"It's fucking freezing.\\\",\\n            subMessage: \\\"Fuck you, cold-face.\\\"\\n          })\\n        }\\n\\n      }\\n\\n      switch (this.state.icon) {\\n        case '03d' :\\n        case '03n' :\\n        this.setState({\\n          message: 'Fucking unremarkable out there.',\\n          subMessage: \\\"Have you been giving the weather life advice? Please stop.\\\"\\n        })\\n        if (this.state.temp < 5) {\\n          this.setState({\\n            message: \\\"It's fucking freezing.\\\",\\n            subMessage: \\\"Fuck you, cold-face.\\\"\\n          })\\n        }\\n      }\\n      \\n\\n    switch (this.state.icon) {\\n      case '04d' :\\n      case '04n' :\\n        this.setState({\\n          message: 'Broken sky, broken dreams.',\\n          subMessage: \\\"Just keep pretending everything's ok.\\\"\\n        })\\n    }\\n\\n      if (this.state.icon === '04n') {\\n        this.setState({\\n          message: 'Broken sky, broken dreams.',\\n          subMessage: \\\"Just keep pretending everything's ok.\\\"\\n        })\\n      }\\n      switch (this.state.icon) {\\n        case '09n' :\\n        case '09d' :\\n          this.setState({\\n            message: \\\"It's fucking grim out there.\\\",\\n            subMessage: \\\"You'd fit right in.\\\"\\n          })\\n      }\\n\\n      switch (this.state.icon) {\\n      case '10d' :\\n      case '10n' :\\n        this.setState({\\n          message: \\\"It's only shitting raining.\\\",\\n            subMessage: \\\"Go outside, you need a shower.\\\"\\n        })\\n      }\\n      switch (this.state.icon) {\\n        case '11d' :\\n        case '11n' :\\n        this.setState({\\n          message: 'BAM! KAPOW!',\\n          subMessage: \\\"Raaaaarrrrrgggghhh! I'm running on thunder, motherfucker!\\\"\\n        })\\n      }\\n      if (this.state.icon === '13d') {\\n        this.setState({\\n          message: 'Snow Day!',\\n          subMessage: \\\"At least today you have an excuse for staying in and doing nothing, loser.\\\"\\n        })\\n      }\\n      if (this.state.icon === '13n') {\\n        this.setState({\\n          message: 'Snow Night!',\\n          subMessage: \\\"Remember people can see your footprints in the snow, pervert.\\\"\\n        })\\n      }\\n      switch (this.state.icon) {\\n        case '50d' :\\n        case '50n' :\\n        this.setState({\\n          message: 'Gorilla in the mist',\\n          subMessage: \\\"You **are** disgustingly hairy.\\\"\\n        })\\n      }\\n      if (this.state.wind > 25) {\\n        this.setState({\\n          message: \\\"Too fucking windy.\\\",\\n          subMessage: \\\"People say that about you a lot, by the way.\\\"\\n        })\\n        switch (this.state.icon) {\\n          case '09d' :\\n          case '09n' :\\n          case '10d' :\\n          case '10n' :\\n          this.setState({\\n            message: \\\"Absolute fucking pisswind.\\\",\\n            subMessage: \\\"Don't even think about that fucking picnic.\\\"\\n          })\\n        }\\n      }\\n      if (this.state.wind > 31) {\\n        this.setState({\\n          message: \\\"It's going to be difficult to walk out there\\\",\\n          subMessage: \\\"Think about staying in with a cup of tea and a good book. If you can read, that is. Can you read?\\\"\\n        })\\n        switch (this.state.icon) {\\n          case '09d' :\\n          case '09n' :\\n          case '10d' :\\n          case '10n' :\\n          this.setState({\\n            message: \\\"Absolute fucking pisswind. It's going to be difficult to walk out there.\\\",\\n            subMessage: \\\"Don't even think about that fucking picnic.\\\"\\n          })\\n        }\\n      }\\n      if (this.state.wind > 39) {\\n        this.setState({\\n          message: \\\"Just stay inside\\\",\\n          subMessage: \\\"This is dangerously windy. Just like you.\\\"\\n        })\\n        switch (this.state.icon) {\\n          case '09d' :\\n          case '09n' :\\n          case '10d' :\\n          case '10n' :\\n          this.setState({\\n            message: \\\"Stay inside, you fucking idiot.\\\",\\n            subMessage: \\\"Don't even think about that fucking picnic. It's dangerously windy, and it's wet.\\\"\\n          })\\n        }\\n        if (this.state.wind > 47) {\\n          this.setState({\\n            message: \\\"Chance of falling masonry, motherfucker.\\\",\\n            subMessage: \\\"Expect to lose a few rooftiles, it's literally that windy. Don't go out there.\\\"\\n          })\\n          switch (this.state.icon) {\\n            case '09d' :\\n            case '09n' :\\n            case '10d' :\\n            case '10n' :\\n            this.setState({\\n              message: \\\"Stay inside, you fucking idiot.\\\",\\n              subMessage: \\\"It's dangerously windy, and it's wet. Roofs are going to lose tiles today.\\\"\\n            })\\n          }\\n        }\\n        if (this.state.wind > 55) {\\n          this.setState({\\n            message: \\\"DON'T. GO. OUTSIDE.\\\",\\n            subMessage: \\\"The wind is literally tearing trees out of the ground. You don't want to be involved in that shit.\\\"\\n          })\\n        }\\n        if (this.state.wind > 73) {\\n          this.setState({\\n            message: \\\"Get to safety.\\\",\\n            subMessage: \\\"This is a hurricane. Stay inside and away from windows, skylights and glass doors. Find a safe area in the home (an interior room, a closet or bathroom on the lower level). If flooding threatens a home, turn off electricity at the main breaker. If a home loses power, turn off major appliances such as the air conditioner and water heater to reduce damage. Do not use electrical appliances, including your computer. Do not go outside. If the eye of the storm passes over your area, there will be a short period of calm, but at the other side of the eye, the wind speed rapidly increases to hurricane force and will come from the opposite direction. Also, do not go outside to 'see what the wind feels like.' It is too easy to be hit by flying debris. Beware of lightning. Stay away from electrical equipment. Don't use the phone or take a bath/shower during the storm.\\\"\\n          })\\n        }\\n      }\\n    }\\n    else {\\n      this.setState({\\n        error: \\\"Please input search values...\\\"\\n      })\\n    }\\n  }\\n\\n  //this is the function that makes the API call and triggers onResponse()\\n  getWeather = async (e) => {\\n    ReactGA.event({\\n      category: 'User',\\n      action: 'Searched Weather'\\n    });\\n    //if we have the user's coordinates and they haven't attempted a search for somewhere else, we use their coordinates to search\\n    if (this.state.value.length < 1 && this.props.latitude) {\\n      location = 'lat=' + this.props.latitude + \\\"&lon=\\\" + this.props.longitude;\\n    }\\n    //if not, we use what they put in the search bar\\n    else {\\n      location = 'q='+ city +','+ country;\\n    }\\n    const api_call = await fetch(`//api.openweathermap.org/data/2.5/weather?${location}&units=metric&appid=${Api_Key}`);\\n    const response = await api_call.json();\\n    //we then store the response in state\\n    this.setState({\\n      response: response,\\n    })\\n    //then we fire the onResponse function\\n    this.onResponse();\\n    // and for the benefit of getForecast, update the city and country variables with the values stored in state\\n    city = this.state.city\\n    country = this.state.country\\n    //we then fire getForecast, which predicts the future for us\\n    this.getForecast();\\n  }\\n\\n\\n  getForecast = async (e) => {\\n    //getForecast uses city and country rather than location\\n    const api_call = await fetch(`//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=metric&appid=${Api_Key}`); \\n    var response = await api_call.json();\\n    //and we store the information\\n    if(city && country){\\n      this.setState({\\n        currentForecast: response\\n      })\\n    }\\n  }\\n  \\n  //handle left and right click take care of horizontal scrolling on the weather forecast section. The CSS 'scroll-behavior: smooth;' makes this nice and juicy\\n  handleRightClick() {\\n    var scrollDistance = window.outerWidth/2;\\n    document.getElementById('weatherRow').scrollLeft += scrollDistance;\\n  }\\n\\n  handleLeftClick() {\\n    var scrollDistance = window.outerWidth/2;\\n    document.getElementById('weatherRow').scrollLeft -= scrollDistance;\\n  }\\n\\n  //as soon as the component mounts on page load, we trigger the API calls\\n  componentDidMount() {\\n    //initializeReactGA()\\n    this.getWeather()\\n  };\\n\\n  //onChange deals with users using the search bar\\n  onChange = (event, { newValue, method }) => {\\n    this.setState({\\n      value: newValue\\n    });\\n    \\n    // this is to see if the search value matches an approved city\\n    function isCity(cities, prop, value) {\\n      return cities.some(function (language) {\\n        return language.cities.some(function (item) {\\n          return item[prop].toLowerCase() === value.toLowerCase()\\n        })\\n      })\\n    }\\n    \\n    if (isCity(cities, 'name', newValue)) {\\n      city = newValue;\\n      country = getCountry(cities, 'name', newValue);\\n      this.getWeather() //if it matches, get the new weather!\\n    }\\n\\n  };\\n  \\n  //autosuggest needs this\\n  onSuggestionsFetchRequested = ({ value }) => {\\n    this.setState({\\n      suggestions: getSuggestions(value)\\n    });\\n  };\\n\\n  onSuggestionsClearRequested = () => {\\n    this.setState({\\n      suggestions: []\\n    });\\n  };\\n\\n  render() {\\n    const { value, suggestions } = this.state;\\n    const inputProps = {\\n      placeholder: this.state.city ? this.state.city : \\\"Where the fuck do you live?\\\", //we display the city if geolocation found our user, if not we demand to know where they live\\n      value,\\n      onChange: this.onChange\\n    };\\n\\n\\n    return (\\n      <div className={'weather'+this.state.icon}>\\n         <div className=\\\"wrapper\\\">\\n            <ShitTag />\\n            <WTF />\\n\\n            <Autosuggest \\n              multiSection={true}\\n              suggestions={suggestions}\\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\\n              getSuggestionValue={getSuggestionValue}\\n              renderSuggestion={renderSuggestion}\\n              renderSectionTitle={renderSectionTitle}\\n              getSectionSuggestions={getSectionSuggestions}\\n              inputProps={inputProps} \\n            />\\n            <Now \\n              temperature={this.state.temperature} \\n              description={this.state.description} \\n              windDeg={this.state.windDeg}\\n              windSpeed={this.state.windSpeed}\\n              daylightLeft={this.state.daylightLeft}\\n              sunrise={this.state.sunrise}\\n              sunset={this.state.sunset}\\n              message={this.state.message}\\n              subMessage={this.state.subMessage}\\n              icon={this.state.icon}\\n            />\\n            <WeatherRow \\n              handleLeftClick={this.handleLeftClick}\\n              handleRightClick={this.handleRightClick}\\n              currentForecast={this.state.currentForecast}\\n            />\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport App from '../App';\\nimport {geolocated} from 'react-geolocated';\\n\\nvar get_ip = require('ipware')().get_ip;\\nthis.use(function(req, res, next) {\\n    var ip_info = get_ip(req);\\n    console.log(ip_info);\\n    // { clientIp: '127.0.0.1', clientIpRoutable: false }\\n    next();\\n});\\n \\nclass GeoTracking extends React.Component {\\n  render() {\\n    return !this.props.isGeolocationAvailable\\n      ? <App />\\n      : !this.props.isGeolocationEnabled\\n        ? <App />\\n        : this.props.coords\\n          ? <App longitude={this.props.coords.longitude} latitude={this.props.coords.latitude} />\\n\\n          : <div><h1>Asking the NSA for your current position...</h1> <div class=\\\"spinner\\\">\\n          <div class=\\\"double-bounce1\\\"></div>\\n          <div class=\\\"double-bounce2\\\"></div>\\n        </div> </div>;\\n  }\\n}\\n \\nexport default geolocated({\\n  positionOptions: {\\n    enableHighAccuracy: false,\\n  },\\n  userDecisionTimeout: 5000,\\n})(GeoTracking);\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './css/style.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport GeoTracking from './Components/geolocated.js'\\n\\nReactDOM.render(<GeoTracking />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,a,n){e.exports=n.p+\"static/media/arrow.7fc7e388.svg\"},17:function(e,a,n){e.exports=n(44)},23:function(e,a,n){},39:function(e,a,n){e.exports=n.p+\"static/media/leftarrow.e8d634ba.svg\"},40:function(e,a,n){e.exports=n.p+\"static/media/rightarrow.c4fef3e8.svg\"},43:function(e,a){function n(e){var a=new Error(\"Cannot find module '\"+e+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=43},44:function(e,a,n){\"use strict\";n.r(a);var t=n(0),m=n.n(t),r=n(14),o=n.n(r),s=(n(23),n(7)),i=n.n(s),l=n(11),h=n(1),c=n(2),u=n(4),d=n(3),g=n(5),w=n(15),y=n.n(w),p=[{title:\"GB\",cities:[{name:\"Aberaeron\"},{name:\"Henfield\"},{name:\"Aberdare\"},{name:\"Aberdeen\"},{name:\"Aberfeldy\"},{name:\"Abergavenny\"},{name:\"Abergele\"},{name:\"Abertillery\"},{name:\"Aberystwyth\"},{name:\"Abingdon\"},{name:\"Accrington\"},{name:\"Adlington\"},{name:\"Airdrie\"},{name:\"Alcester\"},{name:\"Aldeburgh\"},{name:\"Aldershot\"},{name:\"Aldridge\"},{name:\"Alford\"},{name:\"Alfreton\"},{name:\"Alloa\"},{name:\"Alnwick\"},{name:\"Alsager\"},{name:\"Alston\"},{name:\"Amesbury\"},{name:\"Amlwch\"},{name:\"Ammanford\"},{name:\"Ampthill\"},{name:\"Andover\"},{name:\"Annan\"},{name:\"Antrim\"},{name:\"Appleby in Westmorland\"},{name:\"Arbroath\"},{name:\"Armagh\"},{name:\"Arundel\"},{name:\"Ashbourne\"},{name:\"Ashburton\"},{name:\"Ashby de la Zouch\"},{name:\"Ashford\"},{name:\"Ashington\"},{name:\"Ashton in Makerfield\"},{name:\"Atherstone\"},{name:\"Auchtermuchty\"},{name:\"Axminster\"},{name:\"Aylesbury\"},{name:\"Aylsham\"},{name:\"Ayr\"},{name:\"Bacup\"},{name:\"Bakewell\"},{name:\"Bala\"},{name:\"Ballater\"},{name:\"Ballycastle\"},{name:\"Ballyclare\"},{name:\"Ballymena\"},{name:\"Ballymoney\"},{name:\"Ballynahinch\"},{name:\"Banbridge\"},{name:\"Banbury\"},{name:\"Banchory\"},{name:\"Banff\"},{name:\"Bangor\"},{name:\"Barmouth\"},{name:\"Barnard Castle\"},{name:\"Barnet\"},{name:\"Barnoldswick\"},{name:\"Barnsley\"},{name:\"Barnstaple\"},{name:\"Barrhead\"},{name:\"Barrow in Furness\"},{name:\"Barry\"},{name:\"Barton upon Humber\"},{name:\"Basildon\"},{name:\"Basingstoke\"},{name:\"Bath\"},{name:\"Bathgate\"},{name:\"Batley\"},{name:\"Battle\"},{name:\"Bawtry\"},{name:\"Beaconsfield\"},{name:\"Bearsden\"},{name:\"Beaumaris\"},{name:\"Bebington\"},{name:\"Beccles\"},{name:\"Bedale\"},{name:\"Bedford\"},{name:\"Bedlington\"},{name:\"Bedworth\"},{name:\"Beeston\"},{name:\"Bellshill\"},{name:\"Belper\"},{name:\"Berkhamsted\"},{name:\"Berwick upon Tweed\"},{name:\"Betws y Coed\"},{name:\"Beverley\"},{name:\"Bewdley\"},{name:\"Bexhill on Sea\"},{name:\"Bicester\"},{name:\"Biddulph\"},{name:\"Bideford\"},{name:\"Biggar\"},{name:\"Biggleswade\"},{name:\"Billericay\"},{name:\"Bilston\"},{name:\"Bingham\"},{name:\"Birkenhead\"},{name:\"Birmingham\"},{name:\"Bishop Auckland\"},{name:\"Blackburn\"},{name:\"Blackheath\"},{name:\"Blackpool\"},{name:\"Blaenau Ffestiniog\"},{name:\"Blandford Forum\"},{name:\"Bletchley\"},{name:\"Bloxwich\"},{name:\"Blyth\"},{name:\"Bodmin\"},{name:\"Bognor Regis\"},{name:\"Bollington\"},{name:\"Bolsover\"},{name:\"Bolton\"},{name:\"Bootle\"},{name:\"Borehamwood\"},{name:\"Boston\"},{name:\"Bourne\"},{name:\"Bournemouth\"},{name:\"Brackley\"},{name:\"Bracknell\"},{name:\"Bradford\"},{name:\"Bradford on Avon\"},{name:\"Brading\"},{name:\"Bradley Stoke\"},{name:\"Bradninch\"},{name:\"Braintree\"},{name:\"Brechin\"},{name:\"Brecon\"},{name:\"Brentwood\"},{name:\"Bridge of Allan\"},{name:\"Bridgend\"},{name:\"Bridgnorth\"},{name:\"Bridgwater\"},{name:\"Bridlington\"},{name:\"Bridport\"},{name:\"Brigg\"},{name:\"Brighouse\"},{name:\"Brightlingsea\"},{name:\"Brighton\"},{name:\"Bristol\"},{name:\"Brixham\"},{name:\"Broadstairs\"},{name:\"Bromsgrove\"},{name:\"Bromyard\"},{name:\"Brynmawr\"},{name:\"Buckfastleigh\"},{name:\"Buckie\"},{name:\"Buckingham\"},{name:\"Buckley\"},{name:\"Bude\"},{name:\"Budleigh Salterton\"},{name:\"Builth Wells\"},{name:\"Bungay\"},{name:\"Buntingford\"},{name:\"Burford\"},{name:\"Burgess Hill\"},{name:\"Burnham on Crouch\"},{name:\"Burnham on Sea\"},{name:\"Burnley\"},{name:\"Burntisland\"},{name:\"Burntwood\"},{name:\"Burry Port\"},{name:\"Burton Latimer\"},{name:\"Bury\"},{name:\"Bushmills\"},{name:\"Buxton\"},{name:\"Caernarfon\"},{name:\"Caerphilly\"},{name:\"Caistor\"},{name:\"Caldicot\"},{name:\"Callander\"},{name:\"Calne\"},{name:\"Camberley\"},{name:\"Camborne\"},{name:\"Cambridge\"},{name:\"Camelford\"},{name:\"Campbeltown\"},{name:\"Cannock\"},{name:\"Canterbury\"},{name:\"Cardiff\"},{name:\"Cardigan\"},{name:\"Carlisle\"},{name:\"Carluke\"},{name:\"Carmarthen\"},{name:\"Carnforth\"},{name:\"Carnoustie\"},{name:\"Carrickfergus\"},{name:\"Carterton\"},{name:\"Castle Douglas\"},{name:\"Castlederg\"},{name:\"Castleford\"},{name:\"Castlewellan\"},{name:\"Chard\"},{name:\"Charlbury\"},{name:\"Chatham\"},{name:\"Chatteris\"},{name:\"Chelmsford\"},{name:\"Cheltenham\"},{name:\"Chepstow\"},{name:\"Chesham\"},{name:\"Cheshunt\"},{name:\"Chester\"},{name:\"Chester le Street\"},{name:\"Chesterfield\"},{name:\"Chichester\"},{name:\"Chippenham\"},{name:\"Chipping Campden\"},{name:\"Chipping Norton\"},{name:\"Chipping Sodbury\"},{name:\"Chorley\"},{name:\"Christchurch\"},{name:\"Church Stretton\"},{name:\"Cinderford\"},{name:\"Cirencester\"},{name:\"Clacton on Sea\"},{name:\"Cleckheaton\"},{name:\"Cleethorpes\"},{name:\"Clevedon\"},{name:\"Clitheroe\"},{name:\"Clogher\"},{name:\"Clydebank\"},{name:\"Coalisland\"},{name:\"Coalville\"},{name:\"Coatbridge\"},{name:\"Cockermouth\"},{name:\"Coggeshall\"},{name:\"Colchester\"},{name:\"Coldstream\"},{name:\"Coleraine\"},{name:\"Coleshill\"},{name:\"Colne\"},{name:\"Colwyn Bay\"},{name:\"Comber\"},{name:\"Congleton\"},{name:\"Conwy\"},{name:\"Cookstown\"},{name:\"Corbridge\"},{name:\"Corby\"},{name:\"Coventry\"},{name:\"Cowbridge\"},{name:\"Cowdenbeath\"},{name:\"Cowes\"},{name:\"Craigavon\"},{name:\"Cramlington\"},{name:\"Crawley\"},{name:\"Crayford\"},{name:\"Crediton\"},{name:\"Crewe\"},{name:\"Crewkerne\"},{name:\"Criccieth\"},{name:\"Crickhowell\"},{name:\"Crieff\"},{name:\"Cromarty\"},{name:\"Cromer\"},{name:\"Crowborough\"},{name:\"Crowthorne\"},{name:\"Crumlin\"},{name:\"Cuckfield\"},{name:\"Cullen\"},{name:\"Cullompton\"},{name:\"Cumbernauld\"},{name:\"Cupar\"},{name:\"Cwmbran\"},{name:\"Dalbeattie\"},{name:\"Dalkeith\"},{name:\"Darlington\"},{name:\"Dartford\"},{name:\"Dartmouth\"},{name:\"Darwen\"},{name:\"Daventry\"},{name:\"Dawlish\"},{name:\"Deal\"},{name:\"Denbigh\"},{name:\"Denton\"},{name:\"Derby\"},{name:\"Dereham\"},{name:\"Devizes\"},{name:\"Dewsbury\"},{name:\"Didcot\"},{name:\"Dingwall\"},{name:\"Dinnington\"},{name:\"Diss\"},{name:\"Dolgellau\"},{name:\"Donaghadee\"},{name:\"Doncaster\"},{name:\"Dorchester\"},{name:\"Dorking\"},{name:\"Dornoch\"},{name:\"Dover\"},{name:\"Downham Market\"},{name:\"Downpatrick\"},{name:\"Driffield\"},{name:\"Dronfield\"},{name:\"Droylsden\"},{name:\"Dudley\"},{name:\"Dufftown\"},{name:\"Dukinfield\"},{name:\"Dumbarton\"},{name:\"Dumfries\"},{name:\"Dunbar\"},{name:\"Dunblane\"},{name:\"Dundee\"},{name:\"Dunfermline\"},{name:\"Dungannon\"},{name:\"Dunoon\"},{name:\"Duns\"},{name:\"Dunstable\"},{name:\"Durham\"},{name:\"Dursley\"},{name:\"Easingwold\"},{name:\"East Grinstead\"},{name:\"East Kilbride\"},{name:\"Eastbourne\"},{name:\"Eastleigh\"},{name:\"Eastwood\"},{name:\"Ebbw Vale\"},{name:\"Edenbridge\"},{name:\"Edinburgh\"},{name:\"Egham\"},{name:\"Elgin\"},{name:\"Ellesmere\"},{name:\"Ellesmere Port\"},{name:\"Ely\"},{name:\"Enniskillen\"},{name:\"Epping\"},{name:\"Epsom\"},{name:\"Erith\"},{name:\"Esher\"},{name:\"Evesham\"},{name:\"Exeter\"},{name:\"Exmouth\"},{name:\"Eye\"},{name:\"Eyemouth\"},{name:\"Failsworth\"},{name:\"Fairford\"},{name:\"Fakenham\"},{name:\"Falkirk\"},{name:\"Falkland\"},{name:\"Falmouth\"},{name:\"Fareham\"},{name:\"Faringdon\"},{name:\"Farnborough\"},{name:\"Farnham\"},{name:\"Farnworth\"},{name:\"Faversham\"},{name:\"Felixstowe\"},{name:\"Ferndown\"},{name:\"Filey\"},{name:\"Fintona\"},{name:\"Fishguard\"},{name:\"Fivemiletown\"},{name:\"Fleet\"},{name:\"Fleetwood\"},{name:\"Flint\"},{name:\"Flitwick\"},{name:\"Folkestone\"},{name:\"Fordingbridge\"},{name:\"Forfar\"},{name:\"Forres\"},{name:\"Fort William\"},{name:\"Fowey\"},{name:\"Framlingham\"},{name:\"Fraserburgh\"},{name:\"Frodsham\"},{name:\"Frome\"},{name:\"Gainsborough\"},{name:\"Galashiels\"},{name:\"Gateshead\"},{name:\"Gillingham\"},{name:\"Glasgow\"},{name:\"Glastonbury\"},{name:\"Glossop\"},{name:\"Gloucester\"},{name:\"Godalming\"},{name:\"Godmanchester\"},{name:\"Goole\"},{name:\"Gorseinon\"},{name:\"Gosport\"},{name:\"Gourock\"},{name:\"Grange over Sands\"},{name:\"Grangemouth\"},{name:\"Grantham\"},{name:\"Grantown on Spey\"},{name:\"Gravesend\"},{name:\"Grays\"},{name:\"Great Yarmouth\"},{name:\"Greenock\"},{name:\"Grimsby\"},{name:\"Guildford\"},{name:\"Haddington\"},{name:\"Hadleigh\"},{name:\"Hailsham\"},{name:\"Halesowen\"},{name:\"Halesworth\"},{name:\"Halifax\"},{name:\"Halstead\"},{name:\"Haltwhistle\"},{name:\"Hamilton\"},{name:\"Harlow\"},{name:\"Harpenden\"},{name:\"Harrogate\"},{name:\"Hartlepool\"},{name:\"Harwich\"},{name:\"Haslemere\"},{name:\"Hastings\"},{name:\"Hatfield\"},{name:\"Havant\"},{name:\"Haverfordwest\"},{name:\"Haverhill\"},{name:\"Hawarden\"},{name:\"Hawick\"},{name:\"Hay on Wye\"},{name:\"Hayle\"},{name:\"Haywards Heath\"},{name:\"Heanor\"},{name:\"Heathfield\"},{name:\"Hebden Bridge\"},{name:\"Helensburgh\"},{name:\"Helston\"},{name:\"Hemel Hempstead\"},{name:\"Henley on Thames\"},{name:\"Hereford\"},{name:\"Herne Bay\"},{name:\"Hertford\"},{name:\"Hessle\"},{name:\"Heswall\"},{name:\"Hexham\"},{name:\"High Wycombe\"},{name:\"Higham Ferrers\"},{name:\"Highworth\"},{name:\"Hinckley\"},{name:\"Hitchin\"},{name:\"Hoddesdon\"},{name:\"Holmfirth\"},{name:\"Holsworthy\"},{name:\"Holyhead\"},{name:\"Holywell\"},{name:\"Honiton\"},{name:\"Horley\"},{name:\"Horncastle\"},{name:\"Hornsea\"},{name:\"Horsham\"},{name:\"Horwich\"},{name:\"Houghton le Spring\"},{name:\"Hove\"},{name:\"Howden\"},{name:\"Hoylake\"},{name:\"Hucknall\"},{name:\"Huddersfield\"},{name:\"Hungerford\"},{name:\"Hunstanton\"},{name:\"Huntingdon\"},{name:\"Huntly\"},{name:\"Hyde\"},{name:\"Hythe\"},{name:\"Ilford\"},{name:\"Ilfracombe\"},{name:\"Ilkeston\"},{name:\"Ilkley\"},{name:\"Ilminster\"},{name:\"Innerleithen\"},{name:\"Inveraray\"},{name:\"Inverkeithing\"},{name:\"Inverness\"},{name:\"Inverurie\"},{name:\"Ipswich\"},{name:\"Irthlingborough\"},{name:\"Irvine\"},{name:\"Ivybridge\"},{name:\"Jarrow\"},{name:\"Jedburgh\"},{name:\"Johnstone\"},{name:\"Keighley\"},{name:\"Keith\"},{name:\"Kelso\"},{name:\"Kempston\"},{name:\"Kendal\"},{name:\"Kenilworth\"},{name:\"Kesgrave\"},{name:\"Keswick\"},{name:\"Kettering\"},{name:\"Keynsham\"},{name:\"Kidderminster\"},{name:\"Kilbarchan\"},{name:\"Kilkeel\"},{name:\"Killyleagh\"},{name:\"Kilmarnock\"},{name:\"Kilwinning\"},{name:\"Kinghorn\"},{name:\"Kingsbridge\"},{name:\"Kington\"},{name:\"Kingussie\"},{name:\"Kinross\"},{name:\"Kintore\"},{name:\"Kirkby\"},{name:\"Kirkby Lonsdale\"},{name:\"Kirkcaldy\"},{name:\"Kirkcudbright\"},{name:\"Kirkham\"},{name:\"Kirkwall\"},{name:\"Kirriemuir\"},{name:\"Knaresborough\"},{name:\"Knighton\"},{name:\"Knutsford\"},{name:\"Ladybank\"},{name:\"Lampeter\"},{name:\"Lanark\"},{name:\"Lancaster\"},{name:\"Langholm\"},{name:\"Largs\"},{name:\"Larne\"},{name:\"Laugharne\"},{name:\"Launceston\"},{name:\"Laurencekirk\"},{name:\"Leamington Spa\"},{name:\"Leatherhead\"},{name:\"Ledbury\"},{name:\"Leeds\"},{name:\"Leek\"},{name:\"Leicester\"},{name:\"Leighton Buzzard\"},{name:\"Leiston\"},{name:\"Leominster\"},{name:\"Lerwick\"},{name:\"Letchworth\"},{name:\"Leven\"},{name:\"Lewes\"},{name:\"Leyland\"},{name:\"Lichfield\"},{name:\"Limavady\"},{name:\"Lincoln\"},{name:\"Linlithgow\"},{name:\"Lisburn\"},{name:\"Liskeard\"},{name:\"Lisnaskea\"},{name:\"Littlehampton\"},{name:\"Liverpool\"},{name:\"Llandeilo\"},{name:\"Llandovery\"},{name:\"Llandrindod Wells\"},{name:\"Llandudno\"},{name:\"Llanelli\"},{name:\"Llanfyllin\"},{name:\"Llangollen\"},{name:\"Llanidloes\"},{name:\"Llanrwst\"},{name:\"Llantrisant\"},{name:\"Llantwit Major\"},{name:\"Llanwrtyd Wells\"},{name:\"Loanhead\"},{name:\"Lochgilphead\"},{name:\"Lockerbie\"},{name:\"London\"},{name:\"Long Eaton\"},{name:\"Longridge\"},{name:\"Looe\"},{name:\"Lossiemouth\"},{name:\"Lostwithiel\"},{name:\"Loughborough\"},{name:\"Loughton\"},{name:\"Louth\"},{name:\"Lowestoft\"},{name:\"Ludlow\"},{name:\"Lurgan\"},{name:\"Luton\"},{name:\"Lutterworth\"},{name:\"Lydd\"},{name:\"Lydney\"},{name:\"Lyme Regis\"},{name:\"Lymington\"},{name:\"Lynton\"},{name:\"Mablethorpe\"},{name:\"Macclesfield\"},{name:\"Machynlleth\"},{name:\"Maesteg\"},{name:\"Magherafelt\"},{name:\"Maidenhead\"},{name:\"Maidstone\"},{name:\"Maldon\"},{name:\"Malmesbury\"},{name:\"Malton\"},{name:\"Malvern\"},{name:\"Manchester\"},{name:\"Manningtree\"},{name:\"Mansfield\"},{name:\"March\"},{name:\"Margate\"},{name:\"Market Deeping\"},{name:\"Market Drayton\"},{name:\"Market Harborough\"},{name:\"Market Rasen\"},{name:\"Market Weighton\"},{name:\"Markethill\"},{name:\"Markinch\"},{name:\"Marlborough\"},{name:\"Marlow\"},{name:\"Maryport\"},{name:\"Matlock\"},{name:\"Maybole\"},{name:\"Melksham\"},{name:\"Melrose\"},{name:\"Melton Mowbray\"},{name:\"Merthyr Tydfil\"},{name:\"Mexborough\"},{name:\"Middleham\"},{name:\"Middlesbrough\"},{name:\"Middlewich\"},{name:\"Midhurst\"},{name:\"Midsomer Norton\"},{name:\"Milford Haven\"},{name:\"Milngavie\"},{name:\"Milton Keynes\"},{name:\"Minehead\"},{name:\"Moffat\"},{name:\"Mold\"},{name:\"Monifieth\"},{name:\"Monmouth\"},{name:\"Montgomery\"},{name:\"Montrose\"},{name:\"Morecambe\"},{name:\"Moreton in Marsh\"},{name:\"Moretonhampstead\"},{name:\"Morley\"},{name:\"Morpeth\"},{name:\"Motherwell\"},{name:\"Musselburgh\"},{name:\"Nailsea\"},{name:\"Nailsworth\"},{name:\"Nairn\"},{name:\"Nantwich\"},{name:\"Narberth\"},{name:\"Neath\"},{name:\"Needham Market\"},{name:\"Neston\"},{name:\"New Mills\"},{name:\"New Milton\"},{name:\"Newbury\"},{name:\"Newcastle\"},{name:\"Newcastle Emlyn\"},{name:\"Newcastle upon Tyne\"},{name:\"Newent\"},{name:\"Newhaven\"},{name:\"Newmarket\"},{name:\"Newport\"},{name:\"Newport Pagnell\"},{name:\"Newport on Tay\"},{name:\"Newquay\"},{name:\"Newry\"},{name:\"Newton Abbot\"},{name:\"Newton Aycliffe\"},{name:\"Newton Stewart\"},{name:\"Newton le Willows\"},{name:\"Newtown\"},{name:\"Newtownabbey\"},{name:\"Newtownards\"},{name:\"Normanton\"},{name:\"North Berwick\"},{name:\"North Walsham\"},{name:\"Northallerton\"},{name:\"Northampton\"},{name:\"Northwich\"},{name:\"Norwich\"},{name:\"Nottingham\"},{name:\"Nuneaton\"},{name:\"Oakham\"},{name:\"Oban\"},{name:\"Okehampton\"},{name:\"Oldbury\"},{name:\"Oldham\"},{name:\"Oldmeldrum\"},{name:\"Olney\"},{name:\"Omagh\"},{name:\"Ormskirk\"},{name:\"Orpington\"},{name:\"Ossett\"},{name:\"Oswestry\"},{name:\"Otley\"},{name:\"Oundle\"},{name:\"Oxford\"},{name:\"Padstow\"},{name:\"Paignton\"},{name:\"Painswick\"},{name:\"Paisley\"},{name:\"Peebles\"},{name:\"Pembroke\"},{name:\"Penarth\"},{name:\"Penicuik\"},{name:\"Penistone\"},{name:\"Penmaenmawr\"},{name:\"Penrith\"},{name:\"Penryn\"},{name:\"Penzance\"},{name:\"Pershore\"},{name:\"Perth\"},{name:\"Peterborough\"},{name:\"Peterhead\"},{name:\"Peterlee\"},{name:\"Petersfield\"},{name:\"Petworth\"},{name:\"Pickering\"},{name:\"Pitlochry\"},{name:\"Pittenweem\"},{name:\"Plymouth\"},{name:\"Pocklington\"},{name:\"Polegate\"},{name:\"Pontefract\"},{name:\"Pontypridd\"},{name:\"Poole\"},{name:\"Port Talbot\"},{name:\"Portadown\"},{name:\"Portaferry\"},{name:\"Porth\"},{name:\"Porthcawl\"},{name:\"Porthmadog\"},{name:\"Portishead\"},{name:\"Portrush\"},{name:\"Portsmouth\"},{name:\"Portstewart\"},{name:\"Potters Bar\"},{name:\"Potton\"},{name:\"Poulton le Fylde\"},{name:\"Prescot\"},{name:\"Prestatyn\"},{name:\"Presteigne\"},{name:\"Preston\"},{name:\"Prestwick\"},{name:\"Princes Risborough\"},{name:\"Prudhoe\"},{name:\"Pudsey\"},{name:\"Pwllheli\"},{name:\"Ramsgate\"},{name:\"Randalstown\"},{name:\"Rayleigh\"},{name:\"Reading\"},{name:\"Redcar\"},{name:\"Redditch\"},{name:\"Redhill\"},{name:\"Redruth\"},{name:\"Reigate\"},{name:\"Retford\"},{name:\"Rhayader\"},{name:\"Rhuddlan\"},{name:\"Rhyl\"},{name:\"Richmond\"},{name:\"Rickmansworth\"},{name:\"Ringwood\"},{name:\"Ripley\"},{name:\"Ripon\"},{name:\"Rochdale\"},{name:\"Rochester\"},{name:\"Rochford\"},{name:\"Romford\"},{name:\"Romsey\"},{name:\"Ross on Wye\"},{name:\"Rostrevor\"},{name:\"Rothbury\"},{name:\"Rotherham\"},{name:\"Rothesay\"},{name:\"Rowley Regis\"},{name:\"Royston\"},{name:\"Rugby\"},{name:\"Rugeley\"},{name:\"Runcorn\"},{name:\"Rushden\"},{name:\"Rutherglen\"},{name:\"Ruthin\"},{name:\"Ryde\"},{name:\"Rye\"},{name:\"Saffron Walden\"},{name:\"Saintfield\"},{name:\"Salcombe\"},{name:\"Sale\"},{name:\"Salford\"},{name:\"Salisbury\"},{name:\"Saltash\"},{name:\"Saltcoats\"},{name:\"Sandbach\"},{name:\"Sandhurst\"},{name:\"Sandown\"},{name:\"Sandwich\"},{name:\"Sandy\"},{name:\"Sawbridgeworth\"},{name:\"Saxmundham\"},{name:\"Scarborough\"},{name:\"Scunthorpe\"},{name:\"Seaford\"},{name:\"Seaton\"},{name:\"Sedgefield\"},{name:\"Selby\"},{name:\"Selkirk\"},{name:\"Selsey\"},{name:\"Settle\"},{name:\"Sevenoaks\"},{name:\"Shaftesbury\"},{name:\"Shanklin\"},{name:\"Sheerness\"},{name:\"Sheffield\"},{name:\"Shepshed\"},{name:\"Shepton Mallet\"},{name:\"Sherborne\"},{name:\"Sheringham\"},{name:\"Shildon\"},{name:\"Shipston on Stour\"},{name:\"Shoreham by Sea\"},{name:\"Shrewsbury\"},{name:\"Sidmouth\"},{name:\"Sittingbourne\"},{name:\"Skegness\"},{name:\"Skelmersdale\"},{name:\"Skipton\"},{name:\"Sleaford\"},{name:\"Slough\"},{name:\"Smethwick\"},{name:\"Soham\"},{name:\"Solihull\"},{name:\"Somerton\"},{name:\"South Molton\"},{name:\"South Shields\"},{name:\"South Woodham Ferrers\"},{name:\"Southam\"},{name:\"Southampton\"},{name:\"Southborough\"},{name:\"Southend on Sea\"},{name:\"Southport\"},{name:\"Southsea\"},{name:\"Southwell\"},{name:\"Southwold\"},{name:\"Spalding\"},{name:\"Spennymoor\"},{name:\"Spilsby\"},{name:\"Stafford\"},{name:\"Staines\"},{name:\"Stamford\"},{name:\"Stanley\"},{name:\"Staveley\"},{name:\"Stevenage\"},{name:\"Stirling\"},{name:\"Stockport\"},{name:\"Stockton on Tees\"},{name:\"Stoke on Trent\"},{name:\"Stone\"},{name:\"Stowmarket\"},{name:\"Strabane\"},{name:\"Stranraer\"},{name:\"Stratford upon Avon\"},{name:\"Strood\"},{name:\"Stroud\"},{name:\"Sudbury\"},{name:\"Sunderland\"},{name:\"Sutton Coldfield\"},{name:\"Sutton in Ashfield\"},{name:\"Swadlincote\"},{name:\"Swanage\"},{name:\"Swanley\"},{name:\"Swansea\"},{name:\"Swindon\"},{name:\"Tadcaster\"},{name:\"Tadley\"},{name:\"Tain\"},{name:\"Talgarth\"},{name:\"Tamworth\"},{name:\"Taunton\"},{name:\"Tavistock\"},{name:\"Teignmouth\"},{name:\"Telford\"},{name:\"Tenby\"},{name:\"Tenterden\"},{name:\"Tetbury\"},{name:\"Tewkesbury\"},{name:\"Thame\"},{name:\"Thatcham\"},{name:\"Thaxted\"},{name:\"Thetford\"},{name:\"Thirsk\"},{name:\"Thornbury\"},{name:\"Thrapston\"},{name:\"Thurso\"},{name:\"Tilbury\"},{name:\"Tillicoultry\"},{name:\"Tipton\"},{name:\"Tiverton\"},{name:\"Tobermory\"},{name:\"Todmorden\"},{name:\"Tonbridge\"},{name:\"Torpoint\"},{name:\"Torquay\"},{name:\"Totnes\"},{name:\"Totton\"},{name:\"Towcester\"},{name:\"Tredegar\"},{name:\"Tregaron\"},{name:\"Tring\"},{name:\"Troon\"},{name:\"Trowbridge\"},{name:\"Truro\"},{name:\"Tunbridge Wells\"},{name:\"Tywyn\"},{name:\"Uckfield\"},{name:\"Ulverston\"},{name:\"Uppingham\"},{name:\"Usk\"},{name:\"Uttoxeter\"},{name:\"Ventnor\"},{name:\"Verwood\"},{name:\"Wadebridge\"},{name:\"Wadhurst\"},{name:\"Wakefield\"},{name:\"Wallasey\"},{name:\"Wallingford\"},{name:\"Walsall\"},{name:\"Waltham Abbey\"},{name:\"Waltham Cross\"},{name:\"Walton on Thames\"},{name:\"Walton on the Naze\"},{name:\"Wantage\"},{name:\"Ware\"},{name:\"Wareham\"},{name:\"Warminster\"},{name:\"Warrenpoint\"},{name:\"Warrington\"},{name:\"Warwick\"},{name:\"Washington\"},{name:\"Watford\"},{name:\"Wednesbury\"},{name:\"Wednesfield\"},{name:\"Wellingborough\"},{name:\"Wellington\"},{name:\"Wells\"},{name:\"Wells next the Sea\"},{name:\"Welshpool\"},{name:\"Welwyn Garden City\"},{name:\"Wem\"},{name:\"Wendover\"},{name:\"West Bromwich\"},{name:\"Westbury\"},{name:\"Westerham\"},{name:\"Westhoughton\"},{name:\"Weston super Mare\"},{name:\"Wetherby\"},{name:\"Weybridge\"},{name:\"Weymouth\"},{name:\"Whaley Bridge\"},{name:\"Whitby\"},{name:\"Whitchurch\"},{name:\"Whitehaven\"},{name:\"Whitley Bay\"},{name:\"Whitnash\"},{name:\"Whitstable\"},{name:\"Whitworth\"},{name:\"Wick\"},{name:\"Wickford\"},{name:\"Widnes\"},{name:\"Wigan\"},{name:\"Wigston\"},{name:\"Wigtown\"},{name:\"Willenhall\"},{name:\"Wincanton\"},{name:\"Winchester\"},{name:\"Windermere\"},{name:\"Winsford\"},{name:\"Winslow\"},{name:\"Wisbech\"},{name:\"Witham\"},{name:\"Withernsea\"},{name:\"Witney\"},{name:\"Woburn\"},{name:\"Woking\"},{name:\"Wokingham\"},{name:\"Wolverhampton\"},{name:\"Wombwell\"},{name:\"Woodbridge\"},{name:\"Woodstock\"},{name:\"Wootton Bassett\"},{name:\"Worcester\"},{name:\"Workington\"},{name:\"Worksop\"},{name:\"Worthing\"},{name:\"Wotton under Edge\"},{name:\"Wrexham\"},{name:\"Wymondham\"},{name:\"Yarm\"},{name:\"Yarmouth\"},{name:\"Yate\"},{name:\"Yateley\"},{name:\"Yeadon\"},{name:\"Yeovil\"},{name:\"York\"},{name:\"Camden\"},{name:\"Royal Borough of Greenwich\"},{name:\"Hackney\"},{name:\"Hammersmith\"},{name:\"Fulham\"},{name:\"Islington\"},{name:\"Kensington\"},{name:\"Chelsea\"},{name:\"Lambeth\"},{name:\"Lewisham\"},{name:\"Southwark\"},{name:\"Tower Hamlets\"},{name:\"Wandsworth\"},{name:\"City of Westminster\"},{name:\"Barking\"},{name:\"Dagenham\"},{name:\"Barnet\"},{name:\"Bexley\"},{name:\"Brent\"},{name:\"Bromley\"},{name:\"Croydon\"},{name:\"Ealing\"},{name:\"Enfield\"},{name:\"Haringey\"},{name:\"Harrow\"},{name:\"Havering\"},{name:\"Hillingdon\"},{name:\"Hounslow\"},{name:\"Royal Borough of Kingston upon Thames\"},{name:\"Merton\"},{name:\"Newham\"},{name:\"Redbridge\"},{name:\"Richmond upon Thames\"},{name:\"Sutton\"},{name:\"Waltham Forest\"}]},{title:\"IT\",cities:[{name:\"Scala\"},{name:\"Milan\"},{name:\"Naples\"}]}],f=function(e){function a(){return Object(h.a)(this,a),Object(u.a)(this,Object(d.a)(a).apply(this,arguments))}return Object(g.a)(a,e),Object(c.a)(a,[{key:\"render\",value:function(){return m.a.createElement(\"div\",{className:\"now\"},m.a.createElement(\"div\",{className:\"weatherTile white\"},m.a.createElement(\"p\",{className:\"gravitas\"},\"Now\"),m.a.createElement(\"img\",{src:\"//openweathermap.org/img/w/\"+this.props.icon+\".png\"}),m.a.createElement(\"h1\",null,this.props.temperature,\"\\xb0\"),m.a.createElement(\"p\",{className:\"gravitas\"},this.props.description,\".\"),m.a.createElement(\"img\",{className:\"windArrow\",src:n(13),style:{transform:\"rotate(\".concat(this.props.windDeg,\"deg)\"),width:\"20px\"}}),m.a.createElement(\"p\",{className:\"gravitas\"},\"Wind speed: \",this.props.windSpeed,\"mph\"),m.a.createElement(\"div\",{className:\"sunsetGraph\"},m.a.createElement(\"div\",{className:\"sun\",style:{marginRight:\"\".concat(this.props.daylightLeft,\"%\")}})),m.a.createElement(\"p\",{className:\"gravitas sunsetCaption\"},m.a.createElement(\"div\",{className:\"SunriseTime\"},\"Sunrise: \",this.props.sunrise),m.a.createElement(\"div\",{className:\"sunsetDivider\"},\" - \"),m.a.createElement(\"div\",{className:\"SunsetTime\"},\"Sunset: \",this.props.sunset))),m.a.createElement(\"div\",{className:\"messages\"},m.a.createElement(\"h1\",null,this.props.message),m.a.createElement(\"h4\",null,this.props.subMessage)))}}]),a}(m.a.Component),b=function(e){function a(){var e,n;Object(h.a)(this,a);for(var t=arguments.length,m=new Array(t),r=0;r<t;r++)m[r]=arguments[r];return(n=Object(u.a)(this,(e=Object(d.a)(a)).call.apply(e,[this].concat(m)))).humanReadable=function(){var e=0;n.props.currentForecast.list.map(function(a){var t=n.props.currentForecast.list[e].dt,m=new Date(1e3*t),r=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"][m.getUTCDay()],o=m.getUTCHours();if(o>12){var s=o-12;s+=\"pm\"}else if(12===o)s=o+\"pm\";else{0===o&&(o=12);s=o+\"am\"}n.props.currentForecast.list[e].dt=r,n.props.currentForecast.list[e].sys.pod=s;var i=Math.floor(a.main.temp);i+=\"\\xb0\",n.props.currentForecast.list[e].main.temp=i;var l=Math.floor(2.237*n.props.currentForecast.list[e].wind.speed);n.props.currentForecast.list[e].wind.speed=l,e++,n.forceUpdate()})},n.State={0:0},n}return Object(g.a)(a,e),Object(c.a)(a,[{key:\"componentDidUpdate\",value:function(e){this.props.currentForecast.list[0].dt!==e.currentForecast.list[0].dt&&this.humanReadable()}},{key:\"componentDidMount\",value:function(){this.humanReadable()}},{key:\"render\",value:function(){return this.props.currentForecast.list.map(function(e){return m.a.createElement(\"div\",{className:\"weatherTile\",key:e.dt_txt},m.a.createElement(\"p\",{className:\"gravitas\"},e.dt),m.a.createElement(\"p\",{className:\"gravitas\"},e.sys.pod),m.a.createElement(\"p\",{className:\"thick judgement\"},\"01d\"===e.weather[0].icon?\"Fuckin' Lush\":\"01n\"===e.weather[0].icon?\"STARFACE\":\"02d\"===e.weather[0].icon?\"Decent\":\"02n\"===e.weather[0].icon?\"Decent\":\"03d\"===e.weather[0].icon?\"Could be shitter\":\"03n\"===e.weather[0].icon?\"Could be shitter\":\"04d\"===e.weather[0].icon?\"A bit bollocks\":\"04n\"===e.weather[0].icon?\"normal\":\"09d\"===e.weather[0].icon?\"shite\":\"09n\"===e.weather[0].icon?\"shite\":\"10d\"===e.weather[0].icon?\"crap\":\"10n\"===e.weather[0].icon?\"crap\":\"11d\"===e.weather[0].icon?\"Kapow!\":\"11n\"===e.weather[0].icon?\"Kapow!\":\"13d\"===e.weather[0].icon?\"FUCKING SNOW!\":\"13n\"===e.weather[0].icon?\"FUCKING SNOW!\":\"FUCKING MIST\"),m.a.createElement(\"img\",{src:\"//openweathermap.org/img/w/\"+e.weather[0].icon+\".png\"}),m.a.createElement(\"p\",{className:\"thick judgement\"},e.main.temp),m.a.createElement(\"p\",{className:\"gravitas\"},e.weather[0].description),m.a.createElement(\"img\",{className:\"windArrow\",src:n(13),style:{transform:\"rotate(\".concat(e.wind.deg,\"deg)\"),width:\"20px\"}}),m.a.createElement(\"p\",{className:\"gravitas\"},e.wind.speed,\"mph\"))})}}]),a}(m.a.Component),k=function(e){function a(){return Object(h.a)(this,a),Object(u.a)(this,Object(d.a)(a).apply(this,arguments))}return Object(g.a)(a,e),Object(c.a)(a,[{key:\"render\",value:function(){return m.a.createElement(m.a.Fragment,null,m.a.createElement(\"div\",{className:\"scrollers\"},m.a.createElement(\"div\",{className:\"gravitas\",onClick:this.props.handleLeftClick},m.a.createElement(\"img\",{src:n(39),alt:\"Left\"}),\" Scroll\"),m.a.createElement(\"div\",{className:\"border\"}),m.a.createElement(\"div\",{className:\"gravitas\",onClick:this.props.handleRightClick},\"Scroll \",m.a.createElement(\"img\",{src:n(40),alt:\"Right\"}))),m.a.createElement(\"div\",{className:\"weatherRow\",id:\"weatherRow\"},this.props.currentForecast?m.a.createElement(b,{currentForecast:this.props.currentForecast}):null))}}]),a}(m.a.Component),S=function(e){function a(){return Object(h.a)(this,a),Object(u.a)(this,Object(d.a)(a).apply(this,arguments))}return Object(g.a)(a,e),Object(c.a)(a,[{key:\"render\",value:function(){return m.a.createElement(\"div\",{className:\"ShitTag\"},\"Shitstorm \",m.a.createElement(\"span\",{className:\"version\"},\"beta\"))}}]),a}(m.a.Component),v=n(8),C=function(e){function a(e,n){var t;return Object(h.a)(this,a),(t=Object(u.a)(this,Object(d.a)(a).call(this,e,n))).state={WTF:!1},t.handleClick=t.handleClick.bind(Object(v.a)(t)),t}return Object(g.a)(a,e),Object(c.a)(a,[{key:\"handleClick\",value:function(){this.setState(function(e){return{WTF:!e.WTF}})}},{key:\"render\",value:function(){return this.state.WTF?m.a.createElement(\"div\",{className:\"WTFexpanded\"},m.a.createElement(\"div\",{className:\"close\",onClick:this.handleClick},\"X\"),m.a.createElement(\"div\",{className:\"WTFwords\"},m.a.createElement(\"h1\",null,\"What the fuck is all this?\"),m.a.createElement(\"h2\",null,\"Why did you bring this upon the world?\"),m.a.createElement(\"p\",null,\"Short answer: because I can. Longer answer: because I'm a \",m.a.createElement(\"a\",{href:\"https://thisiswilf.com\"},\"designer and developer\"),\" who took five years out to found \",m.a.createElement(\"a\",{href:\"https://ubrew.cc/\"},\"Ubrew\"),\", an open brewery where anyone can brew their own beer. When I came back to design and development all the cool kids were talking about a new code library called \",m.a.createElement(\"a\",{href:\"https://reactjs.org/\"},\"ReactJS\"),\", which was here to kill jQuery. Being someone who used a lot of jQuery, this was concerning. I resolved to learn ReactJS, and make a shitting sweary weather app at the same fucking time. Bon Appetit, motherfucker.\"),m.a.createElement(\"h2\",null,\"Is this the very best weather app you can make?\"),m.a.createElement(\"p\",null,\"No. It's the very best weather app I wanted to make in the time I had with the tools I had. I didn't want to spend more than a few days on this, and I didn't want to spend any real money on it.\"),m.a.createElement(\"h2\",null,\"Hey! This delightful weather app doesn't work in my country!\"),m.a.createElement(\"p\",null,\"Yeah. Originally the vision was to make this thing international, and the code actually accomodates that happening later if needs be. But right now that's beyond the scope of what I can commit to, due to timezone issues and locality issues. Both could be solved with cash, so if this app ever ends up being monetised, I'll probably make it international.\"),m.a.createElement(\"h2\",null,\"Timezone issues?\"),m.a.createElement(\"p\",null,m.a.createElement(\"a\",{href:\"https://www.youtube.com/watch?time_continue=1&v=-5wpm-gesOY\"},\"Watch this video\"),\", and see what timezone issues can do to an otherwise sane and pleasant individual.\"),m.a.createElement(\"h2\",null,\"Locality issues?\"),m.a.createElement(\"p\",null,\"I don't want to drown you in nerd talk, but the system saves money by looking at what you search for, checking it against a list of towns you're allowed to search for, and then only calling the weather station if what you're searching for is going to come up with something that makes sense. I've put together a list of every town in the UK, which means you can only search for towns in the UK.\"),m.a.createElement(\"h2\",null,\"But I live in Little Piddlinghoe on Muckmire, and I can't check the weather.\"),m.a.createElement(\"p\",null,\"That's because Little Piddlinghoe on Muckmire is a tiny Hamlet lurking near an unmapped village, which is itself a day's panicked run from the nearest town. Search for the closest town instead.\"),m.a.createElement(\"h2\",null,\"It says it's raining outside, but I assure you it's not.\"),m.a.createElement(\"p\",null,\"Shitstorm gets all its info from \",m.a.createElement(\"a\",{href:\"https://openweathermap.org/\"},\"openweathermap.org\"),'. Type your town into their engine and you should see the same result as you do on Shitstorm, just without all the swearing. If their info is wrong, they have a button that says \"Wrong data?\". Click that button and tell them all about it.'),m.a.createElement(\"h2\",null,\"It said the weather where I live is going to be grim five days in a row.\"),m.a.createElement(\"p\",null,\"Please address complaints surrounding the quality of your weather to your local borough authority.\"),m.a.createElement(\"h2\",null,\"Can you make something for me?\"),m.a.createElement(\"p\",null,\"I'd love to. Head over to \",m.a.createElement(\"a\",{href:\"https://thisiswilf.com\"},\"thisiswilf.com\"),\" or just email me at wilf@wilfhorsfall.com.\"))):m.a.createElement(\"div\",{className:\"WTF\",onClick:this.handleClick},\"WTF?\")}}]),a}(m.a.Component),B=n(9),E=\"London\",W=\"GB\",M=\"8c5021109e1918aa1c478ce6b4f53c27\",L=\"\";function T(e){var a=e.trim().replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");if(\"\"===a)return[];var n=new RegExp(\"^\"+a,\"i\");return p.map(function(e){return{title:e.title,cities:e.cities.filter(function(e){return n.test(e.name)})}}).filter(function(e){return e.cities.length>0})}function N(e){return e.name}function H(e){return m.a.createElement(\"span\",null,e.name)}function F(e){return m.a.createElement(\"strong\",null,e.title)}function D(e){return e.cities}B.a.initialize(\"UA-136012452-1\"),B.a.pageview(\"/landingPage\"),console.log(\"GA\");var R=function(e){function a(){var e,n;Object(h.a)(this,a);for(var t=arguments.length,m=new Array(t),r=0;r<t;r++)m[r]=arguments[r];return(n=Object(u.a)(this,(e=Object(d.a)(a)).call.apply(e,[this].concat(m)))).state={temperature:\"Loading\",city:\"\",country:\"\",humidity:\"\",description:\"\",error:\"\",value:\"\",suggestions:[],message:\"\",subMessage:\"\"},n.onResponse=function(){var e=new Date(1e3*n.state.response.sys.sunrise),a=e.getUTCHours(),t=e.getUTCMinutes(),m=a+\":\"+(t=t<10?\"0\"+t:t)+\"AM\",r=new Date(1e3*n.state.response.sys.sunset),o=r.getUTCHours();o-=12;var s=r.getUTCMinutes();s=s<10?\"0\"+s:s;var i=(r-new Date)/(r-e)*100,l=o+\":\"+s+\"PM\";if(E&&W){switch(i<=96?(n.setState({daylightLeft:i}),i<=0&&n.setState({daylightLeft:0})):n.setState({daylightLeft:96}),n.setState({temperature:Math.round(n.state.response.main.temp),city:n.state.response.name,country:n.state.response.sys.country,sunset:l,sunrise:m,humidity:n.state.response.main.humidity,description:n.state.response.weather[0].description,icon:n.state.response.weather[0].icon,error:\"\",windSpeed:n.state.response.wind.speed,windDeg:n.state.response.wind.deg}),\"01d\"===n.state.icon&&(n.state.temp>15?n.setState({message:\"Fucking Lush\",subMessage:\"If you had friends you could go outside and play!\"}):n.setState({message:\"Pretty, but dissappointingly cold.\",subMessage:\"Like you, except it's pretty.\"})),\"01n\"===n.state.icon&&n.setState({message:\"Starry motherfucker\",subMessage:\"We are all in the gutter, but some of us are looking at the stars. You're just in the gutter.\"}),n.state.icon){case\"02d\":case\"02n\":n.setState({message:\"Not too shite.\",subMessage:\"Unlike you. You're really shite.\"}),n.state.temp<5&&n.setState({message:\"It's fucking freezing.\",subMessage:\"Fuck you, cold-face.\"})}switch(n.state.icon){case\"03d\":case\"03n\":n.setState({message:\"Fucking unremarkable out there.\",subMessage:\"Have you been giving the weather life advice? Please stop.\"}),n.state.temp<5&&n.setState({message:\"It's fucking freezing.\",subMessage:\"Fuck you, cold-face.\"})}switch(n.state.icon){case\"04d\":case\"04n\":n.setState({message:\"Broken sky, broken dreams.\",subMessage:\"Just keep pretending everything's ok.\"})}switch(\"04n\"===n.state.icon&&n.setState({message:\"Broken sky, broken dreams.\",subMessage:\"Just keep pretending everything's ok.\"}),n.state.icon){case\"09n\":case\"09d\":n.setState({message:\"It's fucking grim out there.\",subMessage:\"You'd fit right in.\"})}switch(n.state.icon){case\"10d\":case\"10n\":n.setState({message:\"It's only shitting raining.\",subMessage:\"Go outside, you need a shower.\"})}switch(n.state.icon){case\"11d\":case\"11n\":n.setState({message:\"BAM! KAPOW!\",subMessage:\"Raaaaarrrrrgggghhh! I'm running on thunder, motherfucker!\"})}switch(\"13d\"===n.state.icon&&n.setState({message:\"Snow Day!\",subMessage:\"At least today you have an excuse for staying in and doing nothing, loser.\"}),\"13n\"===n.state.icon&&n.setState({message:\"Snow Night!\",subMessage:\"Remember people can see your footprints in the snow, pervert.\"}),n.state.icon){case\"50d\":case\"50n\":n.setState({message:\"Gorilla in the mist\",subMessage:\"You **are** disgustingly hairy.\"})}if(n.state.wind>25)switch(n.setState({message:\"Too fucking windy.\",subMessage:\"People say that about you a lot, by the way.\"}),n.state.icon){case\"09d\":case\"09n\":case\"10d\":case\"10n\":n.setState({message:\"Absolute fucking pisswind.\",subMessage:\"Don't even think about that fucking picnic.\"})}if(n.state.wind>31)switch(n.setState({message:\"It's going to be difficult to walk out there\",subMessage:\"Think about staying in with a cup of tea and a good book. If you can read, that is. Can you read?\"}),n.state.icon){case\"09d\":case\"09n\":case\"10d\":case\"10n\":n.setState({message:\"Absolute fucking pisswind. It's going to be difficult to walk out there.\",subMessage:\"Don't even think about that fucking picnic.\"})}if(n.state.wind>39){switch(n.setState({message:\"Just stay inside\",subMessage:\"This is dangerously windy. Just like you.\"}),n.state.icon){case\"09d\":case\"09n\":case\"10d\":case\"10n\":n.setState({message:\"Stay inside, you fucking idiot.\",subMessage:\"Don't even think about that fucking picnic. It's dangerously windy, and it's wet.\"})}if(n.state.wind>47)switch(n.setState({message:\"Chance of falling masonry, motherfucker.\",subMessage:\"Expect to lose a few rooftiles, it's literally that windy. Don't go out there.\"}),n.state.icon){case\"09d\":case\"09n\":case\"10d\":case\"10n\":n.setState({message:\"Stay inside, you fucking idiot.\",subMessage:\"It's dangerously windy, and it's wet. Roofs are going to lose tiles today.\"})}n.state.wind>55&&n.setState({message:\"DON'T. GO. OUTSIDE.\",subMessage:\"The wind is literally tearing trees out of the ground. You don't want to be involved in that shit.\"}),n.state.wind>73&&n.setState({message:\"Get to safety.\",subMessage:\"This is a hurricane. Stay inside and away from windows, skylights and glass doors. Find a safe area in the home (an interior room, a closet or bathroom on the lower level). If flooding threatens a home, turn off electricity at the main breaker. If a home loses power, turn off major appliances such as the air conditioner and water heater to reduce damage. Do not use electrical appliances, including your computer. Do not go outside. If the eye of the storm passes over your area, there will be a short period of calm, but at the other side of the eye, the wind speed rapidly increases to hurricane force and will come from the opposite direction. Also, do not go outside to 'see what the wind feels like.' It is too easy to be hit by flying debris. Beware of lightning. Stay away from electrical equipment. Don't use the phone or take a bath/shower during the storm.\"})}}else n.setState({error:\"Please input search values...\"})},n.getWeather=function(){var e=Object(l.a)(i.a.mark(function e(a){var t,m;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return B.a.event({category:\"User\",action:\"Searched Weather\"}),L=n.state.value.length<1&&n.props.latitude?\"lat=\"+n.props.latitude+\"&lon=\"+n.props.longitude:\"q=\"+E+\",\"+W,e.next=4,fetch(\"//api.openweathermap.org/data/2.5/weather?\".concat(L,\"&units=metric&appid=\").concat(M));case 4:return t=e.sent,e.next=7,t.json();case 7:m=e.sent,n.setState({response:m}),n.onResponse(),E=n.state.city,W=n.state.country,n.getForecast();case 13:case\"end\":return e.stop()}},e)}));return function(a){return e.apply(this,arguments)}}(),n.getForecast=function(){var e=Object(l.a)(i.a.mark(function e(a){var t,m;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(\"//api.openweathermap.org/data/2.5/forecast?q=\".concat(E,\",\").concat(W,\"&units=metric&appid=\").concat(M));case 2:return t=e.sent,e.next=5,t.json();case 5:m=e.sent,E&&W&&n.setState({currentForecast:m});case 7:case\"end\":return e.stop()}},e)}));return function(a){return e.apply(this,arguments)}}(),n.onChange=function(e,a){var t=a.newValue;a.method;n.setState({value:t}),function(e,a,n){return e.some(function(e){return e.cities.some(function(e){return e[a].toLowerCase()===n.toLowerCase()})})}(p,\"name\",t)&&(E=t,W=function(e,a,n){var t=e.find(function(e){return e.cities.some(function(e){return e[a].toLowerCase()===n.toLowerCase()})});return t?t.title:null}(p,\"name\",t),n.getWeather())},n.onSuggestionsFetchRequested=function(e){var a=e.value;n.setState({suggestions:T(a)})},n.onSuggestionsClearRequested=function(){n.setState({suggestions:[]})},n}return Object(g.a)(a,e),Object(c.a)(a,[{key:\"handleRightClick\",value:function(){var e=window.outerWidth/2;document.getElementById(\"weatherRow\").scrollLeft+=e}},{key:\"handleLeftClick\",value:function(){var e=window.outerWidth/2;document.getElementById(\"weatherRow\").scrollLeft-=e}},{key:\"componentDidMount\",value:function(){this.getWeather()}},{key:\"render\",value:function(){var e=this.state,a=e.value,n=e.suggestions,t={placeholder:this.state.city?this.state.city:\"Where the fuck do you live?\",value:a,onChange:this.onChange};return m.a.createElement(\"div\",{className:\"weather\"+this.state.icon},m.a.createElement(\"div\",{className:\"wrapper\"},m.a.createElement(S,null),m.a.createElement(C,null),m.a.createElement(y.a,{multiSection:!0,suggestions:n,onSuggestionsFetchRequested:this.onSuggestionsFetchRequested,onSuggestionsClearRequested:this.onSuggestionsClearRequested,getSuggestionValue:N,renderSuggestion:H,renderSectionTitle:F,getSectionSuggestions:D,inputProps:t}),m.a.createElement(f,{temperature:this.state.temperature,description:this.state.description,windDeg:this.state.windDeg,windSpeed:this.state.windSpeed,daylightLeft:this.state.daylightLeft,sunrise:this.state.sunrise,sunset:this.state.sunset,message:this.state.message,subMessage:this.state.subMessage,icon:this.state.icon}),m.a.createElement(k,{handleLeftClick:this.handleLeftClick,handleRightClick:this.handleRightClick,currentForecast:this.state.currentForecast})))}}]),a}(m.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var A=n(16),O=n(42)().get_ip;(void 0).use(function(e,a,n){var t=O(e);console.log(t),n()});var P=function(e){function a(){return Object(h.a)(this,a),Object(u.a)(this,Object(d.a)(a).apply(this,arguments))}return Object(g.a)(a,e),Object(c.a)(a,[{key:\"render\",value:function(){return this.props.isGeolocationAvailable&&this.props.isGeolocationEnabled?this.props.coords?m.a.createElement(R,{longitude:this.props.coords.longitude,latitude:this.props.coords.latitude}):m.a.createElement(\"div\",null,m.a.createElement(\"h1\",null,\"Asking the NSA for your current position...\"),\" \",m.a.createElement(\"div\",{class:\"spinner\"},m.a.createElement(\"div\",{class:\"double-bounce1\"}),m.a.createElement(\"div\",{class:\"double-bounce2\"})),\" \"):m.a.createElement(R,null)}}]),a}(m.a.Component),I=Object(A.geolocated)({positionOptions:{enableHighAccuracy:!1},userDecisionTimeout:5e3})(P);o.a.render(m.a.createElement(I,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[17,1,2]]]);","extractedComments":[]}