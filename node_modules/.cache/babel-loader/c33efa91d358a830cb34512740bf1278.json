{"ast":null,"code":"import _defineProperty from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/forecast.js\";\nimport React from 'react';\n\nvar Forecast =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forecast, _React$Component);\n\n  function Forecast() {\n    _classCallCheck(this, Forecast);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Forecast).apply(this, arguments));\n  }\n\n  _createClass(Forecast, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentForecast = this.props.currentForecast;\n\n      for (var i = 0; i < currentForecast.list.length; i += 1) {\n        var _this$setState;\n\n        var secondsSinceEpoch = currentForecast.list[i].dt;\n        var date = new Date(secondsSinceEpoch * 1000);\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        var day = days[date.getUTCDay()];\n        var utcHour = date.getUTCHours();\n        var hour = utcHour + (utcHour >= 12 ? \"pm\" : \"am\");\n        var dateStr = [day, hour].join(\" \"); // Wednesday 12pm\n\n        var humanTime = [];\n        humanTime.push(dateStr);\n        console.log(dateStr);\n        this.setState((_this$setState = {}, _defineProperty(_this$setState, i, humanTime), _defineProperty(_this$setState, \"ready\", ready), _this$setState));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var currentForecast = this.props.currentForecast;\n\n      if (this.state.ready) {\n        var _loop = function _loop(i) {\n          return {\n            v: currentForecast.list.map(function (item) {\n              return React.createElement(\"div\", {\n                className: \"weatherTile\",\n                key: item.dt_txt,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 32\n                },\n                __self: this\n              }, React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 33\n                },\n                __self: this\n              }, item.dt_txt), React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 34\n                },\n                __self: this\n              }, _this.state[i]));\n            })\n          };\n        };\n\n        for (var i = 0; i < currentForecast.list.length; i += 1) {\n          var _ret = _loop(i);\n\n          if (typeof _ret === \"object\") return _ret.v;\n        }\n      }\n    }\n  }]);\n\n  return Forecast;\n}(React.Component);\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/forecast.js"],"names":["React","Forecast","currentForecast","props","i","list","length","secondsSinceEpoch","dt","date","Date","days","day","getUTCDay","utcHour","getUTCHours","hour","dateStr","join","humanTime","push","console","log","setState","ready","state","map","item","dt_txt","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,Q;;;;;;;;;;;;;wCACkB;AAChB,UAAIC,eAAe,GAAG,KAAKC,KAAL,CAAWD,eAAjC;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACF,eAAe,CAACG,IAAhB,CAAqBC,MAAtC,EAA+CF,CAAC,IAAE,CAAlD,EAAqD;AAAA;;AACjD,YAAIG,iBAAiB,GAAGL,eAAe,CAACG,IAAhB,CAAqBD,CAArB,EAAwBI,EAAhD;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,iBAAiB,GAAG,IAA7B,CAAX;AACA,YAAII,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACA,YAAIC,GAAG,GAAGD,IAAI,CAACF,IAAI,CAACI,SAAL,EAAD,CAAd;AACA,YAAIC,OAAO,GAAGL,IAAI,CAACM,WAAL,EAAd;AACA,YAAIC,IAAI,GAAGF,OAAO,IAAIA,OAAO,IAAI,EAAX,GAAgB,IAAhB,GAAsB,IAA1B,CAAlB;AACA,YAAIG,OAAO,GAAG,CAACL,GAAD,EAAMI,IAAN,EAAYE,IAAZ,CAAiB,GAAjB,CAAd,CAPiD,CAOZ;;AACrC,YAAIC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAACC,IAAV,CAAeH,OAAf;AAEAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,aAAKM,QAAL,uDACSnB,CADT,EACae,SADb,4CAEeK,KAFf;AAIH;AACJ;;;6BAEQ;AAAA;;AACL,UAAItB,eAAe,GAAG,KAAKC,KAAL,CAAWD,eAAjC;;AACI,UAAI,KAAKuB,KAAL,CAAWD,KAAf,EAAqB;AAAA,mCACTpB,CADS;AAEb;AAAA,eACQF,eAAe,CAACG,IAAhB,CAAqBqB,GAArB,CAAyB,UAAAC,IAAI;AAAA,qBACzB;AAAK,gBAAA,SAAS,EAAC,aAAf;AAA6B,gBAAA,GAAG,EAAEA,IAAI,CAACC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAID,IAAI,CAACC,MAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAI,KAAI,CAACH,KAAL,CAAWrB,CAAX,CAAJ,CAFJ,CADyB;AAAA,aAA7B;AADR;AAFa;;AACjB,aAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACF,eAAe,CAACG,IAAhB,CAAqBC,MAAtC,EAA+CF,CAAC,IAAE,CAAlD,EAAqD;AAAA,2BAA7CA,CAA6C;;AAAA;AASpD;AACJ;AAER;;;;EArCkBJ,KAAK,CAAC6B,S;;AAwC7B,eAAe5B,QAAf","sourcesContent":["import React from 'react'\n\n\nclass Forecast extends React.Component {\n    componentDidMount() {\n        var currentForecast = this.props.currentForecast;\n        for(let i = 0; i<currentForecast.list.length;  i+=1) {\n            var secondsSinceEpoch = currentForecast.list[i].dt;\n            var date = new Date(secondsSinceEpoch * 1000);\n            var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n            var day = days[date.getUTCDay()];\n            var utcHour = date.getUTCHours();\n            var hour = utcHour + (utcHour >= 12 ? \"pm\": \"am\");\n            var dateStr = [day, hour].join(\" \"); // Wednesday 12pm\n            var humanTime = [];\n            humanTime.push(dateStr);\n\n            console.log(dateStr);\n            this.setState({\n                    [i]: humanTime,\n                    ready: ready\n            })\n        } \n    }\n    \n    render() {\n        var currentForecast = this.props.currentForecast\n            if (this.state.ready){\n                for(let i = 0; i<currentForecast.list.length;  i+=1) {\n                    return (\n                            currentForecast.list.map(item => (\n                                <div className=\"weatherTile\" key={item.dt_txt}>\n                                    <p>{item.dt_txt}</p>\n                                    <p>{this.state[i]}</p>\n                                </div>\n                            ))\n                    )\n                } \n            }\n            \n    }\n}\n\nexport default Forecast\n\n\n"]},"metadata":{},"sourceType":"module"}