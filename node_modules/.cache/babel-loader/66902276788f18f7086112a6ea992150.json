{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/App.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport logo from \"./logo.svg\";\nimport './App.css';\nvar Api_Key = \"8c5021109e1918aa1c478ce6b4f53c27\";\nvar languages = [{\n  name: 'C',\n  year: 1972\n}, {\n  name: 'Crabs',\n  year: 1972\n}, {\n  name: 'C#',\n  year: 2000\n}, {\n  name: 'C++',\n  year: 1983\n}, {\n  name: 'Clojure',\n  year: 2007\n}, {\n  name: 'Elm',\n  year: 2012\n}, {\n  name: 'Go',\n  year: 2009\n}, {\n  name: 'Haskell',\n  year: 1990\n}, {\n  name: 'Java',\n  year: 1995\n}, {\n  name: 'Javascript',\n  year: 1995\n}, {\n  name: 'Perl',\n  year: 1987\n}, {\n  name: 'PHP',\n  year: 1995\n}, {\n  name: 'Python',\n  year: 1991\n}, {\n  name: 'Ruby',\n  year: 1995\n}, {\n  name: 'Scala',\n  year: 2003\n}]; // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  var escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === '') {\n    return [];\n  }\n\n  var regex = new RegExp('^' + escapedValue, 'i');\n  return languages.filter(function (language) {\n    return regex.test(language.name);\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      value: '',\n      suggestions: [] //getWeather is a method we'll use to make the api call\n\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                city = 'Croydon'; //e.target.elements.city.value;\n\n                country = 'GB'; //e.target.elements.country.value;\n                //e.preventDefault();   \n\n                _context.next = 4;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&units=metric&appid=\").concat(Api_Key));\n\n              case 4:\n                api_call = _context.sent;\n                _context.next = 7;\n                return api_call.json();\n\n              case 7:\n                response = _context.sent;\n                console.log(response);\n\n                if (city && country) {\n                  _this.setState({\n                    temperature: response.main.temp,\n                    city: response.name,\n                    country: response.sys.country,\n                    humidity: response.main.humidity,\n                    description: response.weather[0].description,\n                    error: \"\"\n                  });\n                } else {\n                  _this.setState({\n                    error: \"Please input search values...\"\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-5 title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Autosuggest, {\n        suggestions: languages,\n        getSuggestionValue: getSuggestionValue,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-7 form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Temp: \", this.state.temperature), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"description: \", this.state.description), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"city: \", this.state.city), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"country: \", this.state.country), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"humidity: \", this.state.humidity), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.message ? \"error: \".concat(this.state.message) : '')))))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/App.js"],"names":["React","Component","Autosuggest","Api_Key","languages","name","year","escapeRegexCharacters","str","replace","getSuggestions","value","escapedValue","trim","regex","RegExp","filter","language","test","getSuggestionValue","suggestion","renderSuggestion","App","state","temperature","undefined","city","country","humidity","description","error","suggestions","getWeather","e","fetch","api_call","json","response","console","log","setState","main","temp","sys","weather","onSuggestionsFetchRequested","onSuggestionsClearRequested","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Api_Key = \"8c5021109e1918aa1c478ce6b4f53c27\";\n\nconst languages = [\n  {\n    name: 'C',\n    year: 1972\n  },\n  {\n    name: 'Crabs',\n    year: 1972\n  },\n  {\n    name: 'C#',\n    year: 2000\n  },\n  {\n    name: 'C++',\n    year: 1983\n  },\n  {\n    name: 'Clojure',\n    year: 2007\n  },\n  {\n    name: 'Elm',\n    year: 2012\n  },\n  {\n    name: 'Go',\n    year: 2009\n  },\n  {\n    name: 'Haskell',\n    year: 1990\n  },\n  {\n    name: 'Java',\n    year: 1995\n  },\n  {\n    name: 'Javascript',\n    year: 1995\n  },\n  {\n    name: 'Perl',\n    year: 1987\n  },\n  {\n    name: 'PHP',\n    year: 1995\n  },\n  {\n    name: 'Python',\n    year: 1991\n  },\n  {\n    name: 'Ruby',\n    year: 1995\n  },\n  {\n    name: 'Scala',\n    year: 2003\n  }\n];\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  \n  if (escapedValue === '') {\n    return [];\n  }\n\n  const regex = new RegExp('^' + escapedValue, 'i');\n\n  return languages.filter(language => regex.test(language.name));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return (\n    <span>{suggestion.name}</span>\n  );\n}\n\n\nclass App extends React.Component {\n\n  state = {\n\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined,\n    value: '',\n    suggestions: []\n  }\n\n  //getWeather is a method we'll use to make the api call\n  getWeather = async (e) => {\n\n    const city = 'Croydon'; //e.target.elements.city.value;\n    const country = 'GB'; //e.target.elements.country.value;\n    //e.preventDefault();   \n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&appid=${Api_Key}`); // fetch(\"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=8c5021109e1918aa1c478ce6b4f53c27\");// fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`);\n    const response = await api_call.json();\n    console.log(response);\n   if(city && country){\n      this.setState({\n        temperature: response.main.temp,\n        city: response.name,\n        country: response.sys.country,\n        humidity: response.main.humidity,\n        description: response.weather[0].description,\n        error: \"\"\n     })\n    } else {\n      this.setState({\n        error: \"Please input search values...\"\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.getWeather()\n  }\n\n  render() {\n\n    return (\n\n      <div>\n         <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                    <Autosuggest \n                      suggestions={languages}\n                      getSuggestionValue={getSuggestionValue}\n                      onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                      onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                      \n                    />\n                </div>\n                <div className=\"col-xs-7 form-container\">\n                <p>Temp: {this.state.temperature}</p>\n                <p>description: {this.state.description}</p>\n                <p>city: {this.state.city}</p>\n                <p>country: {this.state.country}</p>\n                <p>humidity: {this.state.humidity}</p>\n                <p>{this.state.message ? `error: ${this.state.message}` : ''}</p>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}