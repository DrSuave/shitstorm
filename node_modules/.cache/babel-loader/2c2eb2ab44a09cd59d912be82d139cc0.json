{"ast":null,"code":"import _classCallCheck from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\ngetWeather =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var api_call, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=london,uk&appid=\".concat(Api_Key));\n\n          case 2:\n            api_call = _context.sent;\n            _context.next = 5;\n            return api_call.json();\n\n          case 5:\n            response = _context.sent;\n            console.log(response);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getWeather() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=aaaae4fea099add2c8ebdd70d66f7cf3\").then(function (res) {\n        return res.json();\n      }) // comment this out for now\n      //.then(res => res.text())          // convert to plain text\n      //.then(text => console.log(text))  // then log it out\n      .then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          weather: result.weather\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, items.main);\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/App.js"],"names":["React","Component","getWeather","fetch","Api_Key","api_call","json","response","console","log","App","props","state","error","isLoaded","items","then","res","result","setState","weather","message","main"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;AAEAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEYC,KAAK,4EAAqEC,OAArE,EAFjB;;AAAA;AAELC,YAAAA,QAFK;AAAA;AAAA,mBAIYA,QAAQ,CAACC,IAAT,EAJZ;;AAAA;AAILC,YAAAA,QAJK;AAMXC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA;AAAA;AAAA;AAAA,GAAV;;IAUMG,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBZ,MAAAA,KAAK,CAAC,oGAAD,CAAL,CACGa,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACX,IAAJ,EAAJ;AAAA,OADX,EAC2B;AACzB;AACA;AAHF,OAIGU,IAJH,CAKI,UAACE,MAAD,EAAY;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACZL,UAAAA,QAAQ,EAAE,IADE;AAEZM,UAAAA,OAAO,EAAEF,MAAM,CAACE;AAFJ,SAAd;AAID,OAVL,EAWI;AACA;AACA;AACA,gBAACP,KAAD,EAAW;AACT,QAAA,MAAI,CAACM,QAAL,CAAc;AACZL,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAnBL;AAqBD;;;6BAEQ;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACQ,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACP,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,KAAK,CAACO,IADT,CADF;AAKD;AACF;;;;EA/CetB,KAAK,CAACC,S;;AAkDxB,eAAeS,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\ngetWeather = async () => {\n\n  const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=london,uk&appid=${Api_Key}`);\n  \n  const response = await api_call.json();\n  \n  console.log(response);\n  \n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=aaaae4fea099add2c8ebdd70d66f7cf3\")\n      .then(res => res.json()) // comment this out for now\n      //.then(res => res.text())          // convert to plain text\n      //.then(text => console.log(text))  // then log it out\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            weather: result.weather\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {items.main}\n        </ul>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}