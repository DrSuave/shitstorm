{"ast":null,"code":"import _defineProperty from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/forecast.js\";\nimport React from 'react';\n\nvar Forecast =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forecast, _React$Component);\n\n  function Forecast() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Forecast);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Forecast)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      0: 0,\n      1: 1\n    };\n    return _this;\n  }\n\n  _createClass(Forecast, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentForecast = this.props.currentForecast;\n\n      for (var i = 0; i < currentForecast.list.length; i += 1) {\n        var secondsSinceEpoch = currentForecast.list[i].dt;\n        var date = new Date(secondsSinceEpoch * 1000);\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        var day = days[date.getUTCDay()];\n        var utcHour = date.getUTCHours();\n        var hour = utcHour + (utcHour >= 12 ? \"pm\" : \"am\");\n        var dateStr = [day, hour].join(\" \"); // Wednesday 12pm\n\n        var humanTime = [];\n        humanTime.push(dateStr);\n        console.log(dateStr);\n        this.setState(_defineProperty({}, i, humanTime));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentForecast = this.props.currentForecast;\n\n      for (var i = 0; i < currentForecast.list.length; i += 1) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"currentForecast.list.map(item => (\", React.createElement(\"div\", {\n          className: \"weatherTile\",\n          key: item.dt_txt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, item.dt_txt)), \")) this.state.map(item => (\", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, this.state[i]), \"))\");\n      }\n    }\n  }]);\n\n  return Forecast;\n}(React.Component);\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/forecast.js"],"names":["React","Forecast","state","currentForecast","props","i","list","length","secondsSinceEpoch","dt","date","Date","days","day","getUTCDay","utcHour","getUTCHours","hour","dateStr","join","humanTime","push","console","log","setState","item","dt_txt","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,Q;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AACJ,SAAG,CADC;AAEJ,SAAG;AAFC,K;;;;;;wCAKY;AAChB,UAAIC,eAAe,GAAG,KAAKC,KAAL,CAAWD,eAAjC;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACF,eAAe,CAACG,IAAhB,CAAqBC,MAAtC,EAA+CF,CAAC,IAAE,CAAlD,EAAqD;AACjD,YAAIG,iBAAiB,GAAGL,eAAe,CAACG,IAAhB,CAAqBD,CAArB,EAAwBI,EAAhD;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,iBAAiB,GAAG,IAA7B,CAAX;AACA,YAAII,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACA,YAAIC,GAAG,GAAGD,IAAI,CAACF,IAAI,CAACI,SAAL,EAAD,CAAd;AACA,YAAIC,OAAO,GAAGL,IAAI,CAACM,WAAL,EAAd;AACA,YAAIC,IAAI,GAAGF,OAAO,IAAIA,OAAO,IAAI,EAAX,GAAgB,IAAhB,GAAsB,IAA1B,CAAlB;AACA,YAAIG,OAAO,GAAG,CAACL,GAAD,EAAMI,IAAN,EAAYE,IAAZ,CAAiB,GAAjB,CAAd,CAPiD,CAOZ;;AACrC,YAAIC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAACC,IAAV,CAAeH,OAAf;AAEAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,aAAKM,QAAL,qBACSnB,CADT,EACae,SADb;AAGH;AACJ;;;6BAEQ;AACL,UAAIjB,eAAe,GAAG,KAAKC,KAAL,CAAWD,eAAjC;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACF,eAAe,CAACG,IAAhB,CAAqBC,MAAtC,EAA+CF,CAAC,IAAE,CAAlD,EAAqD;AACjD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEQ;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAEoB,IAAI,CAACC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACC,MAAT,CADJ,CAFR,iCAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKxB,KAAL,CAAWG,CAAX,CAAJ,CAPR,OADJ;AAYH;AACJ;;;;EA5CkBL,KAAK,CAAC2B,S;;AA+C7B,eAAe1B,QAAf","sourcesContent":["import React from 'react'\n\n\nclass Forecast extends React.Component {\n    \n\n    state = {\n        0: 0,\n        1: 1\n    }\n\n    componentDidMount() {\n        var currentForecast = this.props.currentForecast;\n        for(let i = 0; i<currentForecast.list.length;  i+=1) {\n            var secondsSinceEpoch = currentForecast.list[i].dt;\n            var date = new Date(secondsSinceEpoch * 1000);\n            var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n            var day = days[date.getUTCDay()];\n            var utcHour = date.getUTCHours();\n            var hour = utcHour + (utcHour >= 12 ? \"pm\": \"am\");\n            var dateStr = [day, hour].join(\" \"); // Wednesday 12pm\n            var humanTime = [];\n            humanTime.push(dateStr);\n\n            console.log(dateStr);\n            this.setState({\n                    [i]: humanTime,\n            })\n        } \n    }\n    \n    render() {\n        var currentForecast = this.props.currentForecast\n        for(let i = 0; i<currentForecast.list.length;  i+=1) {\n            return (\n                <div>\n                    currentForecast.list.map(item => (\n                        <div className=\"weatherTile\" key={item.dt_txt}>\n                            <p>{item.dt_txt}</p>\n                        </div>\n                    ))\n                    this.state.map(item => (\n                        <p>{this.state[i]}</p>\n                    ))\n                </div>\n            )\n        }             \n    }\n}\n\nexport default Forecast\n\n\n"]},"metadata":{},"sourceType":"module"}