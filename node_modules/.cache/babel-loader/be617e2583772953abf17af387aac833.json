{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/App.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { cities } from './variables.js';\nimport Forecast from './Components/forecast';\nexport var city = 'Croydon';\nexport var country = 'GB';\nexport var Api_Key = \"8c5021109e1918aa1c478ce6b4f53c27\";\n\nfunction hasName(prop, value, data) {\n  return data.some(function (obj) {\n    return prop in obj && obj[prop] === value;\n  });\n}\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  var escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === '') {\n    return [];\n  }\n\n  var regex = new RegExp('^' + escapedValue, 'i');\n  return cities.map(function (section) {\n    return {\n      title: section.title,\n      cities: section.cities.filter(function (language) {\n        return regex.test(language.name);\n      })\n    };\n  }).filter(function (section) {\n    return section.cities.length > 0;\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nfunction renderSectionTitle(section) {\n  return React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, section.title);\n}\n\nfunction getSectionSuggestions(section) {\n  return section.cities;\n}\n\nfunction getTitle(cities, prop, value) {\n  // Find the language...\n  var result = cities.find(function (language) {\n    // ... where some item has item[prop] === value\n    return language.cities.some(function (item) {\n      return item[prop] === value;\n    });\n  });\n  return result ? result.title : null;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      value: '',\n      suggestions: [],\n      message: undefined,\n      subMessage: undefined //getWeather is a method we'll use to make the api call\n\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var api_call, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&units=metric&appid=\").concat(Api_Key));\n\n              case 2:\n                api_call = _context.sent;\n                _context.next = 5;\n                return api_call.json();\n\n              case 5:\n                response = _context.sent;\n                console.log(response);\n\n                if (city && country) {\n                  _this.setState({\n                    temperature: response.main.temp,\n                    city: response.name,\n                    country: response.sys.country,\n                    humidity: response.main.humidity,\n                    description: response.weather[0].description,\n                    icon: response.weather[0].icon,\n                    error: \"\"\n                  });\n\n                  if (_this.state.icon === '01d') {\n                    if (_this.state.temp > 18) {\n                      _this.setState({\n                        message: 'Fucking Lush',\n                        subMessage: \"If you had friends you could go outside and play!\"\n                      });\n                    } else {\n                      _this.setState({\n                        message: 'Pretty, but dissapointingly cold.',\n                        subMessage: \"Like you, except it's pretty.\"\n                      });\n                    }\n                  }\n\n                  if (_this.state.icon === '02d' || '02n') {\n                    _this.setState({\n                      message: 'Not bad',\n                      subMessage: \"Unlike you. You're really bad.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '03d' || '03n') {\n                    _this.setState({\n                      message: 'Fucking unremarkable out there.',\n                      subMessage: \"Have you been giving the weather life advice? Please stop.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '03d' || '03n') {\n                    _this.setState({\n                      message: \"It's fucking freezing.\",\n                      subMessage: \"Fuck you, cold-face.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '04d' || '04n') {\n                    _this.setState({\n                      message: 'Broken sky, broken dreams.',\n                      subMessage: \"Just keep pretending everything's ok.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '09d' || '09n') {\n                    _this.setState({\n                      message: 'Proper fucking raining out there.',\n                      subMessage: \"Go outside, you need a shower.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '10d' || '10d') {\n                    _this.setState({\n                      message: 'Rain, rain, go away.',\n                      subMessage: \"And stay away, you mouth-breathing trogolodyte.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '11d' || '11n') {\n                    _this.setState({\n                      message: 'BAM! KAPOW!',\n                      subMessage: \"Raaaaarrrrrgggghhh! I'm running on thunder, motherfucker!\"\n                    });\n                  }\n\n                  if (_this.state.icon === '13d') {\n                    _this.setState({\n                      message: 'Snow Day!',\n                      subMessage: \"At least today you have an excuse for staying in and doing nothing, loser.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '13n') {\n                    _this.setState({\n                      message: 'Snow Night!',\n                      subMessage: \"Remember people can see your footprints in the snow, pervert.\"\n                    });\n                  }\n\n                  if (_this.state.icon === '50d') {\n                    _this.setState({\n                      message: 'Gorilla in the mist',\n                      subMessage: \"You **are** disgustingly hairy.\"\n                    });\n                  }\n                } else {\n                  _this.setState({\n                    error: \"Please input search values...\"\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getForecast =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var api_call, response, i;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&units=metric&appid=\").concat(Api_Key));\n\n              case 2:\n                api_call = _context2.sent;\n                _context2.next = 5;\n                return api_call.json();\n\n              case 5:\n                response = _context2.sent;\n                //var currentForecast = this.props.currentForecast;\n                i = 0;\n                console.log('forecast');\n                console.log(response);\n\n                if (city && country) {\n                  _this.setState({\n                    currentForecast: response\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (event, _ref3) {\n      var newValue = _ref3.newValue,\n          method = _ref3.method;\n\n      _this.setState({\n        value: newValue\n      });\n\n      function hasValue(cities, prop, value) {\n        return cities.some(function (language) {\n          return language.cities.some(function (item) {\n            return item[prop] === value;\n          });\n        });\n      }\n\n      if (hasValue(cities, 'name', newValue)) {\n        city = newValue;\n        country = getTitle(cities, 'name', newValue);\n\n        _this.getWeather();\n\n        _this.getForecast();\n      }\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref4) {\n      var value = _ref4.value;\n\n      _this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeather();\n      this.getForecast();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n      var inputProps = {\n        placeholder: \"Where are we checking?\",\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-5 title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Autosuggest, {\n        multiSection: true,\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        renderSectionTitle: renderSectionTitle,\n        getSectionSuggestions: getSectionSuggestions,\n        inputProps: inputProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/w/\" + this.state.icon + \".png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, Math.floor(this.state.temperature), \"\\xB0\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, this.state.description), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, this.state.city, \", \", this.state.country), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, this.state.subMessage)), this.state.currentForecast ? React.createElement(Forecast, {\n        currentForecast: this.state.currentForecast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }) : null)))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/App.js"],"names":["React","Component","Autosuggest","cities","Forecast","city","country","Api_Key","hasName","prop","value","data","some","obj","escapeRegexCharacters","str","replace","getSuggestions","escapedValue","trim","regex","RegExp","map","section","title","filter","language","test","name","length","getSuggestionValue","suggestion","renderSuggestion","renderSectionTitle","getSectionSuggestions","getTitle","result","find","item","App","state","temperature","undefined","humidity","description","error","suggestions","message","subMessage","getWeather","e","fetch","api_call","json","response","console","log","setState","main","temp","sys","weather","icon","getForecast","i","currentForecast","onChange","event","newValue","method","hasValue","onSuggestionsFetchRequested","onSuggestionsClearRequested","inputProps","placeholder","Math","floor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport {cities} from './variables.js';\nimport Forecast from './Components/forecast';\n\n\nexport var city = 'Croydon';\n\nexport var country = 'GB'\n\nexport const Api_Key = \"8c5021109e1918aa1c478ce6b4f53c27\";\n\n\nfunction hasName(prop, value, data) {\n  return data.some(function(obj) {\n      return prop in obj && obj[prop] === value;\n  });\n}\n\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  \n  if (escapedValue === '') {\n    return [];\n  }\n\n  const regex = new RegExp('^' + escapedValue, 'i');\n\n  return cities\n    .map(section => {\n      return {\n        title: section.title,\n        cities: section.cities.filter(language => regex.test(language.name))\n      };\n    })\n    .filter(section => section.cities.length > 0);\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return (\n    <span>{suggestion.name}</span>\n  );\n}\n\nfunction renderSectionTitle(section) {\n  return (\n    <strong>{section.title}</strong>\n  );\n}\n\nfunction getSectionSuggestions(section) {\n  return section.cities;\n}\nfunction getTitle(cities, prop, value) {\n  // Find the language...\n  var result = cities.find(function (language) {\n    // ... where some item has item[prop] === value\n    return language.cities.some(function (item) {\n      return item[prop] === value\n    })\n  })\n\n  return result ? result.title : null\n}\n\n\n\nclass App extends React.Component {\n\n  state = {\n\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined,\n    value: '',\n    suggestions: [],\n    message: undefined,\n    subMessage: undefined\n    \n  }\n\n  \n\n  //getWeather is a method we'll use to make the api call\n  getWeather = async (e) => {\n\n    //city = 'Croydon'; //e.target.elements.city.value;\n    //var country = 'GB'; //e.target.elements.country.value;\n    //e.preventDefault();   \n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&appid=${Api_Key}`); // fetch(\"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=8c5021109e1918aa1c478ce6b4f53c27\");// fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`);\n    const response = await api_call.json();\n    console.log(response);\n    if(city && country){\n      this.setState({\n        temperature: response.main.temp,\n        city: response.name,\n        country: response.sys.country,\n        humidity: response.main.humidity,\n        description: response.weather[0].description,\n        icon: response.weather[0].icon,\n        error: \"\"\n      })\n      if (this.state.icon === '01d') {\n        if (this.state.temp > 18) {\n          this.setState({\n            message: 'Fucking Lush',\n            subMessage: \"If you had friends you could go outside and play!\"\n          })\n        } else {\n          this.setState({\n            message: 'Pretty, but dissapointingly cold.',\n            subMessage: \"Like you, except it's pretty.\"\n          })\n        }\n      }\n      if (this.state.icon === '02d' || '02n') {\n        this.setState({\n          message: 'Not bad',\n          subMessage: \"Unlike you. You're really bad.\"\n        })\n      }\n      if (this.state.icon === '03d' || '03n') {\n        this.setState({\n          message: 'Fucking unremarkable out there.',\n          subMessage: \"Have you been giving the weather life advice? Please stop.\"\n        })\n      }\n      if (this.state.icon === '03d' || '03n') {\n        this.setState({\n          message: \"It's fucking freezing.\",\n          subMessage: \"Fuck you, cold-face.\"\n        })\n      }\n      if (this.state.icon === '04d' || '04n') {\n        this.setState({\n          message: 'Broken sky, broken dreams.',\n          subMessage: \"Just keep pretending everything's ok.\"\n        })\n      }\n      if (this.state.icon === '09d' || '09n') {\n        this.setState({\n          message: 'Proper fucking raining out there.',\n          subMessage: \"Go outside, you need a shower.\"\n        })\n      }\n      if (this.state.icon === '10d' || '10d') {\n        this.setState({\n          message: 'Rain, rain, go away.',\n          subMessage: \"And stay away, you mouth-breathing trogolodyte.\"\n        })\n      }\n      if (this.state.icon === '11d' || '11n') {\n        this.setState({\n          message: 'BAM! KAPOW!',\n          subMessage: \"Raaaaarrrrrgggghhh! I'm running on thunder, motherfucker!\"\n        })\n      }\n      if (this.state.icon === '13d') {\n        this.setState({\n          message: 'Snow Day!',\n          subMessage: \"At least today you have an excuse for staying in and doing nothing, loser.\"\n        })\n      }\n      if (this.state.icon === '13n') {\n        this.setState({\n          message: 'Snow Night!',\n          subMessage: \"Remember people can see your footprints in the snow, pervert.\"\n        })\n      }\n      if (this.state.icon === '50d') {\n        this.setState({\n          message: 'Gorilla in the mist',\n          subMessage: \"You **are** disgustingly hairy.\"\n        })\n      }\n    }\n    else {\n      this.setState({\n        error: \"Please input search values...\"\n      })\n    }\n  }\n\n\n  getForecast = async (e) => {\n\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=metric&appid=${Api_Key}`); // fetch(\"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=8c5021109e1918aa1c478ce6b4f53c27\");// fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`);\n    var response = await api_call.json();\n    //var currentForecast = this.props.currentForecast;\n    var i = 0;\n    console.log('forecast');\n    console.log(response);\n    if(city && country){\n      this.setState({\n        currentForecast: response\n      })\n    }\n  }\n  \n\n  componentDidMount() {\n    this.getWeather()\n    this.getForecast()\n  };\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue\n    });\n\n    \n    function hasValue(cities, prop, value) {\n      return cities.some(function (language) {\n        return language.cities.some(function (item) {\n          return item[prop] === value\n        })\n      })\n    }\n    \n    if (hasValue(cities, 'name', newValue)) {\n     \n      city = newValue;\n      country = getTitle(cities, 'name', newValue);\n      this.getWeather()\n      this.getForecast()\n\n    }\n\n  };\n  \n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n    const inputProps = {\n      placeholder: \"Where are we checking?\",\n      value,\n      onChange: this.onChange\n    };\n\n\n    return (\n\n      <div>\n         <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                    <Autosuggest \n                      multiSection={true}\n                      suggestions={suggestions}\n                      onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                      onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                      getSuggestionValue={getSuggestionValue}\n                      renderSuggestion={renderSuggestion}\n                      renderSectionTitle={renderSectionTitle}\n                      getSectionSuggestions={getSectionSuggestions}\n                      inputProps={inputProps} \n                    />\n                </div>\n                <div className=\"now\">\n                <img src={\"http://openweathermap.org/img/w/\" + this.state.icon + \".png\"} />\n                <h1>{Math.floor(this.state.temperature)}°</h1>\n                <h2>{this.state.description}</h2>\n                <h3>{this.state.city}, {this.state.country}</h3>\n                <h1>{this.state.message}</h1>\n                <h4>{this.state.subMessage}</h4>\n                </div>\n                {this.state.currentForecast ? <Forecast currentForecast={this.state.currentForecast} /> : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}