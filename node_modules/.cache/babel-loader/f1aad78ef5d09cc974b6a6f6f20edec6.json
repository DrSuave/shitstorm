{"ast":null,"code":"import _classCallCheck from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/forecast.js\";\nimport React from 'react';\n\nvar Forecast =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forecast, _React$Component);\n\n  function Forecast() {\n    _classCallCheck(this, Forecast);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Forecast).apply(this, arguments));\n  }\n\n  _createClass(Forecast, [{\n    key: \"render\",\n    value: function render() {\n      var currentForecast = this.props.currentForecast;\n\n      for (var i = 0; i < currentForecast.list.length; i += 1) {\n        console.log(currentForecast.list[i].dt);\n        var secondsSinceEpoch = currentForecast.list[i].dt;\n        var date = new Date(secondsSinceEpoch * 1000);\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        var day = days[date.getUTCDay()]; // var utcHour = date.getUTCHours();\n        // var hour = utcHour + (utcHour >= 12 ? \"pm\": \"am\");\n        // var dateStr = [day, hour].join(\" \"); // Wednesday 12pm\n        // this.setState({\n        //     [i]: dateStr\n        //   })\n      }\n\n      for (var _i = 0; _i < currentForecast.list.length; _i += 1) {\n        return currentForecast.list.map(function (item) {\n          return React.createElement(\"div\", {\n            className: \"weatherTile\",\n            key: item.dt_txt,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, item.dt_txt), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, JSON.stringify(new Date(item.dt * 1000))));\n        });\n      }\n    }\n  }]);\n\n  return Forecast;\n}(React.Component);\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/wilfhorsfall/Google Drive/sites/shitstorm/shitstorm/src/Components/forecast.js"],"names":["React","Forecast","currentForecast","props","i","list","length","console","log","dt","secondsSinceEpoch","date","Date","days","day","getUTCDay","map","item","dt_txt","JSON","stringify","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;;;;;;;;;6BACO;AACL,UAAIC,eAAe,GAAG,KAAKC,KAAL,CAAWD,eAAjC;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACF,eAAe,CAACG,IAAhB,CAAqBC,MAAtC,EAA+CF,CAAC,IAAE,CAAlD,EAAqD;AACjDG,QAAAA,OAAO,CAACC,GAAR,CAAYN,eAAe,CAACG,IAAhB,CAAqBD,CAArB,EAAwBK,EAApC;AACA,YAAIC,iBAAiB,GAAGR,eAAe,CAACG,IAAhB,CAAqBD,CAArB,EAAwBK,EAAhD;AACA,YAAIE,IAAI,GAAG,IAAIC,IAAJ,CAASF,iBAAiB,GAAG,IAA7B,CAAX;AACA,YAAIG,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACA,YAAIC,GAAG,GAAGD,IAAI,CAACF,IAAI,CAACI,SAAL,EAAD,CAAd,CALiD,CAMjD;AACA;AACA;AACA;AACA;AACA;AAEH;;AACD,WAAI,IAAIX,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAACF,eAAe,CAACG,IAAhB,CAAqBC,MAAtC,EAA+CF,EAAC,IAAE,CAAlD,EAAqD;AACjD,eACIF,eAAe,CAACG,IAAhB,CAAqBW,GAArB,CAAyB,UAAAC,IAAI;AAAA,iBACzB;AAAK,YAAA,SAAS,EAAC,aAAf;AAA6B,YAAA,GAAG,EAAEA,IAAI,CAACC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACC,MAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIC,IAAI,CAACC,SAAL,CAAe,IAAIR,IAAJ,CAASK,IAAI,CAACR,EAAL,GAAU,IAAnB,CAAf,CAAJ,CAFJ,CADyB;AAAA,SAA7B,CADJ;AAQH;AACJ;;;;EA3BkBT,KAAK,CAACqB,S;;AA8B7B,eAAepB,QAAf","sourcesContent":["import React from 'react'\n\nclass Forecast extends React.Component {\n    render() {\n        var currentForecast = this.props.currentForecast;\n        for(let i = 0; i<currentForecast.list.length;  i+=1) {\n            console.log(currentForecast.list[i].dt)\n            var secondsSinceEpoch = currentForecast.list[i].dt;\n            var date = new Date(secondsSinceEpoch * 1000);\n            var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n            var day = days[date.getUTCDay()];\n            // var utcHour = date.getUTCHours();\n            // var hour = utcHour + (utcHour >= 12 ? \"pm\": \"am\");\n            // var dateStr = [day, hour].join(\" \"); // Wednesday 12pm\n            // this.setState({\n            //     [i]: dateStr\n            //   })\n\n        } \n        for(let i = 0; i<currentForecast.list.length;  i+=1) {\n            return (\n                currentForecast.list.map(item => (\n                    <div className=\"weatherTile\" key={item.dt_txt}>\n                        <p>{item.dt_txt}</p>\n                        <p>{JSON.stringify(new Date(item.dt * 1000))}</p>\n                    </div>\n                ))\n            )\n        } \n    }\n}\n\nexport default Forecast\n\n\n"]},"metadata":{},"sourceType":"module"}